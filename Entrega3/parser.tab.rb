#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class ParserRtn < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 193)

load 'MainRtn.rb'
load 'clasesParser.rb'
	
	def initialize(tokens)
		@tokens = tokens
		@yydebug = true
	end 

	def parse
		do_parse
	end

	def next_token
		@tokens.next_token
	end

	
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     6,     6,    49,    55,    37,    38,    39,    12,    13,    40,
    18,    19,    43,    41,    44,     7,    87,    42,    12,    13,
    10,    35,   119,    37,    38,    39,    12,    13,    40,    14,
   154,    43,    41,    18,    19,    15,    42,    50,   155,    45,
    35,    88,    18,    19,    18,    19,     5,     5,    36,    20,
   124,    37,    38,    39,    12,    13,    40,    92,    93,    43,
    41,    18,    19,    46,    42,    18,    19,    36,    35,   150,
    37,    38,    39,    12,    13,    40,    47,    48,    43,    41,
    51,    54,    57,    42,    58,    59,    60,    35,   157,    37,
    38,    39,    12,    13,    40,    36,    61,    43,    41,    62,
    63,    75,    42,    76,    82,    89,    35,   158,    37,    38,
    39,    12,    13,    40,    36,    75,    43,    41,    94,   114,
   114,    42,   116,   120,   125,    35,   159,    37,    38,    39,
    12,    13,    40,    36,   148,    43,    41,   151,   152,   160,
    42,   164,   166,   169,    35,   165,    37,    38,    39,    12,
    13,    40,    36,   nil,    43,    41,   nil,   nil,   nil,    42,
   nil,   nil,   nil,    35,   173,    37,    38,    39,    12,    13,
    40,    36,   nil,    43,    41,   nil,   nil,   nil,    42,   nil,
   nil,   nil,    35,   175,    37,    38,    39,    12,    13,    40,
    36,   nil,    43,    41,   nil,   nil,   nil,    42,   nil,   nil,
   nil,    35,    37,    38,    39,    12,    13,    40,   nil,    36,
    43,    41,   nil,   nil,   nil,    42,   nil,   nil,   nil,    35,
   nil,    37,    38,    39,    12,    13,    40,   nil,    36,    43,
    41,   nil,   nil,   nil,    42,   nil,   nil,   nil,    35,    37,
    38,    39,    12,    13,    40,   nil,    36,    43,    41,   nil,
   nil,   nil,    42,   nil,   nil,   nil,    35,   nil,    37,    38,
    39,    12,    13,    40,   nil,    36,    43,    41,   nil,   nil,
   nil,    42,   nil,   nil,   nil,    35,    37,    38,    39,    12,
    13,    40,   nil,    36,    43,    41,   nil,   nil,   nil,    42,
   nil,   nil,   nil,    35,   nil,    37,    38,    39,    12,    13,
    40,   nil,    36,    43,    41,   nil,   nil,   nil,    42,   nil,
   nil,   nil,    35,    37,    38,    39,    12,    13,    40,   nil,
    36,    43,    41,   nil,   nil,   nil,    42,   nil,   nil,   nil,
    35,   nil,    37,    38,    39,    12,    13,    40,   nil,    36,
    43,    41,   nil,   nil,   nil,    42,   nil,   nil,   nil,    35,
    37,    38,    39,    12,    13,    40,   nil,    36,    43,    41,
   nil,   nil,   nil,    42,   nil,   nil,   nil,    35,   nil,    37,
    38,    39,    12,    13,    40,   nil,    36,    43,    41,   nil,
   nil,   nil,    42,   nil,   nil,   nil,    35,    37,    38,    39,
    12,    13,    40,   nil,    36,    43,    41,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    35,   nil,    37,    38,    39,    12,
    13,    40,   nil,    36,    43,    41,   118,   nil,   nil,    42,
   nil,   nil,   nil,    35,    95,    96,    97,    98,    99,   nil,
   nil,    36,   nil,   nil,   nil,   108,   109,   102,   103,   104,
   105,   106,   107,   100,   101,    95,    96,    97,    98,    99,
    36,   168,    95,    96,    97,    98,    99,   nil,   nil,   167,
   nil,   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   nil,
   108,   109,   102,   103,   104,   105,   106,   107,   100,   101,
    95,    96,    97,    98,    99,   108,   109,   102,   103,   104,
   105,   106,   107,   100,   101,    95,    96,    97,    98,    99,
   115,   108,   109,   102,   103,   104,   105,   106,   107,   100,
   101,    95,    96,    97,    98,    99,   nil,   108,   109,   102,
   103,   104,   105,   106,   107,   100,   101,    95,    96,    97,
    98,    99,    73,    74,    68,    73,    74,    68,   nil,   nil,
    73,    74,    68,   nil,    69,   nil,   nil,    69,   nil,   nil,
   nil,   nil,    69,   nil,    67,   nil,    66,    67,    72,    66,
    79,    72,    67,   nil,    66,    79,    72,    73,    74,    68,
    73,    74,    68,    73,    74,    68,    73,    74,    68,    69,
   nil,   nil,    69,   nil,   nil,    69,   nil,   nil,    69,    67,
   nil,    66,    67,    72,    66,    67,    72,    66,    67,    72,
    66,   nil,    72,    73,    74,    68,    73,    74,    68,    73,
    74,    68,    73,    74,    68,    69,   nil,   nil,    69,   nil,
   nil,    69,   nil,   nil,    69,    67,   nil,    66,    67,    72,
    66,    67,    72,    66,    67,    72,    66,   nil,    72,    73,
    74,    68,    73,    74,    68,    73,    74,    68,    73,    74,
    68,    69,   nil,   nil,    69,   nil,   nil,    69,   nil,   nil,
    69,    67,   nil,    66,    67,    72,    66,    67,    72,    66,
    67,    72,    66,   nil,    72,    73,    74,    68,    73,    74,
    68,    73,    74,    68,    73,    74,    68,    69,   nil,   nil,
    69,   nil,   nil,    69,   nil,   nil,    69,    67,   nil,    66,
    67,    72,    66,    67,    72,    66,    67,    72,    66,   nil,
    72,    73,    74,    68,    73,    74,    68,    73,    74,    68,
    73,    74,    68,    69,   nil,   nil,    69,   nil,   nil,    69,
   nil,   nil,    69,    67,   nil,    66,    67,    72,    66,    67,
    72,    66,    67,    72,    66,   nil,    72,    73,    74,    68,
    73,    74,    68,    73,    74,    68,   nil,   nil,   nil,    69,
   nil,   nil,    69,   nil,   nil,    69,   nil,   nil,   nil,    67,
   nil,    66,    67,    72,    66,    67,    72,    66,   143,    72,
    73,    74,    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    69,   nil,   nil,   156,   nil,   nil,   nil,   nil,
   nil,   nil,    67,   nil,    66,   nil,    72,   108,   109,   102,
   103,   104,   105,   106,   107,   100,   101,    95,    96,    97,
    98,    99,    73,    74,    68,    73,    74,    68,   nil,   nil,
   nil,   nil,   nil,   nil,    69,   nil,   nil,    69,   nil,   nil,
   nil,   nil,   nil,   117,    67,   nil,    66,    67,    72,    66,
   nil,    72,   108,   109,   102,   103,   104,   105,   106,   107,
   100,   101,    95,    96,    97,    98,    99,   108,   109,   102,
   103,   104,   105,   106,   107,   100,   101,    95,    96,    97,
    98,    99,   nil,   nil,   nil,   nil,   nil,   141,   108,   109,
   102,   103,   104,   105,   106,   107,   100,   101,    95,    96,
    97,    98,    99,   108,   109,   102,   103,   104,   105,   106,
   107,   100,   101,    95,    96,    97,    98,    99,   108,   nil,
   102,   103,   104,   105,   106,   107,   100,   101,    95,    96,
    97,    98,    99,   108,   109,   102,   103,   104,   105,   106,
   107,   100,   101,    95,    96,    97,    98,    99,   -74,   -74,
   -74,   -74,   -74,   -74,   100,   101,    95,    96,    97,    98,
    99,   -74,   -74,   -74,   -74,   -74,   -74,   100,   101,    95,
    96,    97,    98,    99,   -74,   -74,   -74,   -74,   -74,   -74,
   100,   101,    95,    96,    97,    98,    99,   -74,   -74,   -74,
   -74,   -74,   -74,   100,   101,    95,    96,    97,    98,    99,
   -74,   -74,   -74,   -74,   -74,   -74,   100,   101,    95,    96,
    97,    98,    99,   -74,   -74,   -74,   -74,   -74,   -74,   100,
   101,    95,    96,    97,    98,    99,   102,   103,   104,   105,
   106,   107,   100,   101,    95,    96,    97,    98,    99 ]

racc_action_check = [
     0,     2,    21,    24,    24,    24,    24,    24,    24,    24,
    10,    10,    24,    24,    15,     1,    46,    24,     6,     6,
     5,    24,    85,    85,    85,    85,    85,    85,    85,     7,
   144,    85,    85,    12,    12,    10,    85,    21,   144,    15,
    85,    46,    45,    45,    50,    50,     0,     2,    24,    11,
    90,    90,    90,    90,    90,    90,    90,    52,    52,    90,
    90,    88,    88,    16,    90,    89,    89,    85,    90,   121,
   121,   121,   121,   121,   121,   121,    17,    20,   121,   121,
    22,    23,    27,   121,    28,    29,    30,   121,   146,   146,
   146,   146,   146,   146,   146,    90,    31,   146,   146,    32,
    33,    36,   146,    37,    41,    47,   146,   147,   147,   147,
   147,   147,   147,   147,   121,    54,   147,   147,    55,    77,
    80,   147,    82,    86,    93,   147,   149,   149,   149,   149,
   149,   149,   149,   146,   119,   149,   149,   122,   124,   150,
   149,   159,   162,   165,   149,   161,   161,   161,   161,   161,
   161,   161,   147,   nil,   161,   161,   nil,   nil,   nil,   161,
   nil,   nil,   nil,   161,   171,   171,   171,   171,   171,   171,
   171,   149,   nil,   171,   171,   nil,   nil,   nil,   171,   nil,
   nil,   nil,   171,   174,   174,   174,   174,   174,   174,   174,
   161,   nil,   174,   174,   nil,   nil,   nil,   174,   nil,   nil,
   nil,   174,    13,    13,    13,    13,    13,    13,   nil,   171,
    13,    13,   nil,   nil,   nil,    13,   nil,   nil,   nil,    13,
   nil,    44,    44,    44,    44,    44,    44,   nil,   174,    44,
    44,   nil,   nil,   nil,    44,   nil,   nil,   nil,    44,    49,
    49,    49,    49,    49,    49,   nil,    13,    49,    49,   nil,
   nil,   nil,    49,   nil,   nil,   nil,    49,   nil,    87,    87,
    87,    87,    87,    87,   nil,    44,    87,    87,   nil,   nil,
   nil,    87,   nil,   nil,   nil,    87,   115,   115,   115,   115,
   115,   115,   nil,    49,   115,   115,   nil,   nil,   nil,   115,
   nil,   nil,   nil,   115,   nil,   117,   117,   117,   117,   117,
   117,   nil,    87,   117,   117,   nil,   nil,   nil,   117,   nil,
   nil,   nil,   117,   118,   118,   118,   118,   118,   118,   nil,
   115,   118,   118,   nil,   nil,   nil,   118,   nil,   nil,   nil,
   118,   nil,   120,   120,   120,   120,   120,   120,   nil,   117,
   120,   120,   nil,   nil,   nil,   120,   nil,   nil,   nil,   120,
   151,   151,   151,   151,   151,   151,   nil,   118,   151,   151,
   nil,   nil,   nil,   151,   nil,   nil,   nil,   151,   nil,   155,
   155,   155,   155,   155,   155,   nil,   120,   155,   155,   nil,
   nil,   nil,   155,   nil,   nil,   nil,   155,   168,   168,   168,
   168,   168,   168,   nil,   151,   168,   168,   nil,   nil,   nil,
   168,   nil,   nil,   nil,   168,   nil,   172,   172,   172,   172,
   172,   172,   nil,   155,   172,   172,    84,   nil,   nil,   172,
   nil,   nil,   nil,   172,   131,   131,   131,   131,   131,   nil,
   nil,   168,   nil,   nil,   nil,    84,    84,    84,    84,    84,
    84,    84,    84,    84,    84,    84,    84,    84,    84,    84,
   172,   163,   132,   132,   132,   132,   132,   nil,   nil,   163,
   nil,   nil,   nil,   nil,   nil,   nil,   170,   nil,   nil,   nil,
   163,   163,   163,   163,   163,   163,   163,   163,   163,   163,
   163,   163,   163,   163,   163,   170,   170,   170,   170,   170,
   170,   170,   170,   170,   170,   170,   170,   170,   170,   170,
    81,    64,    64,    64,    64,    64,    64,    64,    64,    64,
    64,    64,    64,    64,    64,    64,   nil,    81,    81,    81,
    81,    81,    81,    81,    81,    81,    81,    81,    81,    81,
    81,    81,    35,    35,    35,    38,    38,    38,   nil,   nil,
    39,    39,    39,   nil,    35,   nil,   nil,    38,   nil,   nil,
   nil,   nil,    39,   nil,    35,   nil,    35,    38,    35,    38,
    38,    38,    39,   nil,    39,    39,    39,    40,    40,    40,
    42,    42,    42,    43,    43,    43,    67,    67,    67,    40,
   nil,   nil,    42,   nil,   nil,    43,   nil,   nil,    67,    40,
   nil,    40,    42,    40,    42,    43,    42,    43,    67,    43,
    67,   nil,    67,    68,    68,    68,    69,    69,    69,    75,
    75,    75,    95,    95,    95,    68,   nil,   nil,    69,   nil,
   nil,    75,   nil,   nil,    95,    68,   nil,    68,    69,    68,
    69,    75,    69,    75,    95,    75,    95,   nil,    95,    96,
    96,    96,    97,    97,    97,    98,    98,    98,    99,    99,
    99,    96,   nil,   nil,    97,   nil,   nil,    98,   nil,   nil,
    99,    96,   nil,    96,    97,    96,    97,    98,    97,    98,
    99,    98,    99,   nil,    99,   100,   100,   100,   101,   101,
   101,   102,   102,   102,   103,   103,   103,   100,   nil,   nil,
   101,   nil,   nil,   102,   nil,   nil,   103,   100,   nil,   100,
   101,   100,   101,   102,   101,   102,   103,   102,   103,   nil,
   103,   104,   104,   104,   105,   105,   105,   106,   106,   106,
   107,   107,   107,   104,   nil,   nil,   105,   nil,   nil,   106,
   nil,   nil,   107,   104,   nil,   104,   105,   104,   105,   106,
   105,   106,   107,   106,   107,   nil,   107,   108,   108,   108,
   109,   109,   109,   114,   114,   114,   nil,   nil,   nil,   108,
   nil,   nil,   109,   nil,   nil,   114,   nil,   nil,   nil,   108,
   nil,   108,   109,   108,   109,   114,   109,   114,   114,   114,
   116,   116,   116,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   116,   nil,   nil,   145,   nil,   nil,   nil,   nil,
   nil,   nil,   116,   nil,   116,   nil,   116,   145,   145,   145,
   145,   145,   145,   145,   145,   145,   145,   145,   145,   145,
   145,   145,   156,   156,   156,   167,   167,   167,   nil,   nil,
   nil,   nil,   nil,   nil,   156,   nil,   nil,   167,   nil,   nil,
   nil,   nil,   nil,    83,   156,   nil,   156,   167,   156,   167,
   nil,   167,    83,    83,    83,    83,    83,    83,    83,    83,
    83,    83,    83,    83,    83,    83,    83,   110,   110,   110,
   110,   110,   110,   110,   110,   110,   110,   110,   110,   110,
   110,   110,   nil,   nil,   nil,   nil,   nil,   110,    78,    78,
    78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
    78,    78,    78,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,   113,   113,   113,   140,   nil,
   140,   140,   140,   140,   140,   140,   140,   140,   140,   140,
   140,   140,   140,   142,   142,   142,   142,   142,   142,   142,
   142,   142,   142,   142,   142,   142,   142,   142,   133,   133,
   133,   133,   133,   133,   133,   133,   133,   133,   133,   133,
   133,   134,   134,   134,   134,   134,   134,   134,   134,   134,
   134,   134,   134,   134,   135,   135,   135,   135,   135,   135,
   135,   135,   135,   135,   135,   135,   135,   136,   136,   136,
   136,   136,   136,   136,   136,   136,   136,   136,   136,   136,
   137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
   137,   137,   137,   138,   138,   138,   138,   138,   138,   138,
   138,   138,   138,   138,   138,   138,   139,   139,   139,   139,
   139,   139,   139,   139,   139,   139,   139,   139,   139 ]

racc_action_pointer = [
    -2,    15,    -1,   nil,   nil,   -26,    11,    29,   nil,   nil,
   -12,    46,    11,   198,   nil,    -6,    16,    28,   nil,   nil,
    34,    -6,    37,    33,     0,   nil,   nil,    39,    41,    42,
    43,    53,    56,    57,   nil,   508,    59,    55,   511,   516,
   543,    56,   546,   549,   217,    20,    -4,    61,   nil,   235,
    22,   nil,    14,   nil,    73,    75,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   474,   nil,   nil,   552,   579,   582,
   nil,   nil,   nil,   nil,   nil,   585,   nil,    75,   861,   nil,
    76,   490,   108,   825,   408,    19,   103,   254,    39,    43,
    47,   nil,   nil,    76,   nil,   588,   615,   618,   621,   624,
   651,   654,   657,   660,   687,   690,   693,   696,   723,   726,
   840,   nil,   nil,   876,   729,   272,   756,   291,   309,    91,
   328,    66,   117,   nil,    95,   nil,   nil,   nil,   nil,   nil,
   nil,   387,   415,   919,   932,   945,   958,   971,   984,   997,
   891,   nil,   906,   nil,    27,   780,    85,   104,   nil,   123,
    96,   346,   nil,   nil,   nil,   365,   798,   nil,   nil,    98,
   nil,   142,   139,   443,   nil,   100,   nil,   801,   383,   nil,
   458,   161,   402,   nil,   180,   nil ]

racc_action_default = [
   -74,   -74,   -74,    -2,    -4,   -74,   -74,   -74,    -1,    -3,
   -74,   -74,   -74,   -74,   176,   -74,   -74,   -74,   -67,   -68,
   -74,   -74,   -74,   -74,   -74,   -20,   -21,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,   -30,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -10,   -11,   -74,
   -74,   -15,   -74,   -17,   -18,   -74,   -22,   -23,   -24,   -25,
   -26,   -27,   -28,   -29,   -31,   -47,   -48,   -74,   -74,   -74,
   -69,   -70,   -71,   -72,   -73,   -74,   -33,   -34,   -36,   -37,
   -35,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,
   -74,   -14,   -16,   -74,   -13,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,
   -74,   -50,   -51,   -32,   -74,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,    -9,   -74,   -19,   -52,   -53,   -54,   -55,
   -56,   -57,   -58,   -59,   -60,   -61,   -62,   -63,   -64,   -65,
   -66,   -49,   -38,   -39,   -74,   -74,   -74,   -74,    -5,   -74,
   -74,   -74,   -12,   -40,   -41,   -74,   -74,   -45,   -46,   -74,
    -6,   -74,   -74,   -74,    -7,   -74,   -42,   -74,   -74,    -8,
   -74,   -74,   -74,   -44,   -74,   -43 ]

racc_goto_table = [
    24,    22,    56,     3,     4,     8,     9,    77,    80,     1,
     2,    16,    11,    21,    52,    64,    53,   153,   nil,    23,
    81,   nil,    83,    84,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    85,   nil,   nil,   nil,   nil,    90,   nil,   nil,    91,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   110,   111,   112,
   nil,   nil,    86,   nil,   nil,   113,   nil,    23,   nil,   nil,
   nil,   nil,   nil,    56,   nil,   nil,   nil,   nil,    56,   nil,
   nil,   nil,   nil,   nil,   121,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
   123,   nil,   nil,   144,   142,   122,   145,   nil,   nil,    56,
   nil,   nil,   nil,   nil,   146,   147,   nil,   149,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    56,    56,   nil,    56,   nil,   nil,
   nil,   nil,   nil,   162,   nil,   nil,   163,   nil,   161,    56,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   170,   nil,    56,
   nil,   nil,    56,   nil,   nil,   171,   nil,   nil,   nil,   174 ]

racc_goto_check = [
     5,    10,    14,     3,     4,     3,     4,    22,    22,     1,
     2,     6,     8,     9,    11,    21,    12,    23,   nil,     7,
    21,   nil,    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5,   nil,   nil,   nil,   nil,     5,   nil,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,    21,
   nil,   nil,     7,   nil,   nil,    21,   nil,     7,   nil,   nil,
   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,    14,   nil,
   nil,   nil,   nil,   nil,     5,    21,    21,    21,    21,    21,
    21,    21,    21,    21,    21,    21,    21,    21,    21,    21,
     6,   nil,   nil,    14,    21,     7,    21,   nil,   nil,    14,
   nil,   nil,   nil,   nil,     5,     5,   nil,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    14,    14,   nil,    14,   nil,   nil,
   nil,   nil,   nil,    14,   nil,   nil,    21,   nil,     5,    14,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,    14,
   nil,   nil,    14,   nil,   nil,     5,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,     9,    10,     3,     4,   -13,     1,     7,     6,     1,
   -11,    -9,    -7,   nil,   -22,   nil,   nil,   nil,   nil,   nil,
   nil,   -20,   -31,  -127,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,    34,   nil,
   nil,   nil,    27,    25,    26,    28,    29,    30,    31,    32,
    33,    78,   nil,   nil,    65,    70,    71 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 53, :_reduce_1,
  1, 53, :_reduce_2,
  2, 54, :_reduce_3,
  1, 54, :_reduce_4,
  7, 56, :_reduce_5,
  8, 56, :_reduce_6,
  9, 56, :_reduce_7,
  10, 56, :_reduce_8,
  4, 58, :_reduce_9,
  2, 58, :_reduce_10,
  4, 55, :_reduce_11,
  6, 60, :_reduce_12,
  4, 60, :_reduce_13,
  3, 61, :_reduce_14,
  2, 61, :_reduce_15,
  3, 62, :_reduce_16,
  2, 62, :_reduce_17,
  1, 63, :_reduce_18,
  3, 63, :_reduce_19,
  1, 57, :_reduce_20,
  1, 57, :_reduce_21,
  2, 65, :_reduce_22,
  2, 66, :_reduce_23,
  2, 66, :_reduce_24,
  2, 66, :_reduce_25,
  2, 66, :_reduce_26,
  2, 66, :_reduce_27,
  2, 66, :_reduce_28,
  2, 66, :_reduce_29,
  1, 66, :_reduce_30,
  2, 72, :_reduce_31,
  3, 64, :_reduce_32,
  2, 67, :_reduce_33,
  2, 68, :_reduce_34,
  2, 68, :_reduce_35,
  1, 74, :_reduce_36,
  1, 74, :_reduce_37,
  3, 74, :_reduce_38,
  3, 74, :_reduce_39,
  5, 69, :_reduce_40,
  1, 75, :_reduce_41,
  3, 75, :_reduce_42,
  11, 70, :_reduce_43,
  9, 70, :_reduce_44,
  5, 70, :_reduce_45,
  5, 71, :_reduce_46,
  1, 73, :_reduce_none,
  1, 73, :_reduce_48,
  3, 73, :_reduce_49,
  2, 73, :_reduce_50,
  2, 73, :_reduce_51,
  3, 73, :_reduce_52,
  3, 73, :_reduce_53,
  3, 73, :_reduce_54,
  3, 73, :_reduce_55,
  3, 73, :_reduce_56,
  3, 73, :_reduce_57,
  3, 73, :_reduce_58,
  3, 73, :_reduce_59,
  3, 73, :_reduce_60,
  3, 73, :_reduce_61,
  3, 73, :_reduce_62,
  3, 73, :_reduce_63,
  3, 73, :_reduce_64,
  3, 73, :_reduce_65,
  3, 73, :_reduce_66,
  1, 59, :_reduce_67,
  1, 59, :_reduce_68,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 77, :_reduce_71,
  1, 78, :_reduce_72,
  1, 78, :_reduce_73 ]

racc_reduce_n = 74

racc_shift_n = 176

racc_token_table = {
  false => 0,
  :error => 1,
  "program" => 2,
  "end" => 3,
  "read" => 4,
  "write" => 5,
  "writeln" => 6,
  "with" => 7,
  "do" => 8,
  "if" => 9,
  "then" => 10,
  "else" => 11,
  "while" => 12,
  "for" => 13,
  "from" => 14,
  "to" => 15,
  "by" => 16,
  "repeat" => 17,
  "times" => 18,
  "func" => 19,
  "begin" => 20,
  "return" => 21,
  "number" => 22,
  "boolean" => 23,
  "true" => 24,
  "false" => 25,
  "not" => 26,
  "and" => 27,
  "or" => 28,
  "==" => 29,
  "/=" => 30,
  ">=" => 31,
  "<=" => 32,
  ">" => 33,
  "<" => 34,
  "+" => 35,
  "-" => 36,
  "*" => 37,
  "/" => 38,
  "%" => 39,
  "div" => 40,
  "mod" => 41,
  "=" => 42,
  ";" => 43,
  "," => 44,
  "->" => 45,
  "(" => 46,
  ")" => 47,
  :ID => 48,
  :STRING => 49,
  :NUMBER => 50,
  :UMINUS => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"program\"",
  "\"end\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"with\"",
  "\"do\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"number\"",
  "\"boolean\"",
  "\"true\"",
  "\"false\"",
  "\"not\"",
  "\"and\"",
  "\"or\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"div\"",
  "\"mod\"",
  "\"=\"",
  "\";\"",
  "\",\"",
  "\"->\"",
  "\"(\"",
  "\")\"",
  "ID",
  "STRING",
  "NUMBER",
  "UMINUS",
  "$start",
  "ESTRUCTURA",
  "FUNCIONES",
  "PROGRAMA",
  "FUNCION",
  "INSTRUCCIONES",
  "PARAMETROS",
  "TIPO",
  "BLOQUE",
  "LISTA_DECLARACION",
  "DECLARACION",
  "LISTA_ID",
  "ASIGNACION",
  "SECUENCIACION",
  "INSTRUCCION",
  "ENTRADA",
  "SALIDA",
  "CONDICIONAL",
  "REPETICION_D",
  "REPETICION_I",
  "RETURN",
  "EXPRESION",
  "ESCRIBIR",
  "COND",
  "LITERAL",
  "LITERAL_NUMBER",
  "LITERAL_BOOLEAN" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_1(val, _values, result)
     result = Estructura.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_2(val, _values, result)
     result = Estructura.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_3(val, _values, result)
     result = Funcion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[0], nil, nil, val[4], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[0], val[2], nil, val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_8(val, _values, result)
     result = Funcion.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_9(val, _values, result)
     result = Parametros.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_10(val, _values, result)
     result = Parametros.new(val[0],val[1],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_11(val, _values, result)
     result = Programa.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_12(val, _values, result)
     result = Bloque.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_13(val, _values, result)
     result = Bloque.new(nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_14(val, _values, result)
     result = ListaDeclaracion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_15(val, _values, result)
     result = ListaDeclaracion.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_16(val, _values, result)
     result = Declaracion.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_17(val, _values, result)
     result = Declaracion.new(val[0], nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_18(val, _values, result)
     result = Identificador.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_19(val, _values, result)
     result = Identificador.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_20(val, _values, result)
     result = Secuenciacion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_21(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_22(val, _values, result)
     result = Instruccion.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_30(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_31(val, _values, result)
     result = Return.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_32(val, _values, result)
     result = Asignacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_33(val, _values, result)
     result = Entrada.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_34(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_35(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_37(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_38(val, _values, result)
     result = Escribir.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_39(val, _values, result)
     result = Escribir.new()
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_40(val, _values, result)
     result = Condicional.new(val[1],val[3],val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_41(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_42(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_43(val, _values, result)
     result = For.new(val[1], val[3], val[5], val[7], val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_44(val, _values, result)
     result = For.new(val[1], val[3], val[5], nil, val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_45(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_46(val, _values, result)
     result = RepeticionI.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 147)
  def _reduce_48(val, _values, result)
     result = Identificador.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_49(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 149)
  def _reduce_50(val, _values, result)
     result = OpNot.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 150)
  def _reduce_51(val, _values, result)
     result = OpUMINUS.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_52(val, _values, result)
     result = OpMultiplicacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_53(val, _values, result)
     result = OpDivisionE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_54(val, _values, result)
     result = OpModE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_55(val, _values, result)
     result = OpDivision.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_56(val, _values, result)
     result = OpMod.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_57(val, _values, result)
     result = OpSuma.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 157)
  def _reduce_58(val, _values, result)
     result = OpResta.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_59(val, _values, result)
     result = OpEquivalente.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_60(val, _values, result)
     result = OpDesigual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_61(val, _values, result)
     result = OpMayorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_62(val, _values, result)
     result = OpMenorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 162)
  def _reduce_63(val, _values, result)
     result = OpMayor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 163)
  def _reduce_64(val, _values, result)
     result = OpMenor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_65(val, _values, result)
     result = OpAnd.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_66(val, _values, result)
     result = OpOr.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_67(val, _values, result)
     result = TipoNumber.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_68(val, _values, result)
     result = TipoBoolean.new() 
    result
  end
.,.,

# reduce 69 omitted

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.y', 180)
  def _reduce_71(val, _values, result)
     result = LiteralNumerico.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_72(val, _values, result)
     result = LiteralBooleano.new("true") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_73(val, _values, result)
     result = LiteralBooleano.new("false") 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ParserRtn
