#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lexer'
require_relative 'clasesParser'
require_relative 'clasesContexto'

# Errores sintacticos
class ErrorSintactico < RuntimeError

	def initialize(token)
		@token = token
	end

	def to_s
		"fila: " + @token.fila.to_s() + ", columna: " + @token.columna.to_s() + ", token inesperado: #{@token.token} \n"   # EL PROBLEMA ES ACA
	end
end

class ParserRtn < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 256)
	
	def initialize(tokens)
		@tokens = tokens
		@yydebug = true
		super()
	end 

	def parse
		do_parse
	end

	def next_token
		@tokens.shift
	end

	def on_error(id, token, pila)
		raise ErrorSintactico.new(token)
	end
	
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    73,    64,    11,    60,    73,    64,    11,    60,     7,    68,
     6,    61,    64,    11,    60,    61,    73,    64,    11,    60,
    67,    59,    61,    41,     5,    59,   139,    61,    11,   119,
   115,   140,    59,   116,    64,    11,    60,    59,    79,    44,
    45,    64,    11,    60,    61,    44,    45,     5,    65,    66,
    35,    61,    65,    66,    59,     6,    64,    11,    60,    65,
    66,    59,    44,    45,    65,    66,    61,    64,    11,    60,
    64,    11,    60,    64,    11,    60,    59,    61,    44,    45,
    61,    65,    66,    61,    44,    45,    36,    59,    65,    66,
    59,   149,    39,    59,   150,    46,    64,    11,    60,    44,
    45,    47,    48,    65,    66,    49,    61,    50,    51,    64,
    11,    60,    52,    53,    65,    66,    59,    65,    66,    61,
    65,    66,    64,    11,    60,    64,    11,    60,    54,    59,
   108,    11,    61,    11,    82,    61,    83,    11,    64,    11,
    60,    68,    59,    65,    66,    59,   110,   110,    61,   112,
   117,    64,    11,    60,    11,   122,    65,    66,    59,    67,
   151,    61,    11,   162,    64,    11,    60,   169,   172,    65,
    66,    59,    65,    66,    61,   177,   181,    64,    11,    60,
    64,    11,    60,   185,    59,    65,    66,    61,   nil,   nil,
    61,   nil,   nil,    64,    11,    60,   nil,    59,    65,    66,
    59,   nil,   nil,    61,   nil,   nil,    64,    11,    60,   nil,
   nil,    65,    66,    59,   nil,   nil,    61,   nil,   nil,    64,
    11,    60,   nil,   nil,    65,    66,    59,    65,    66,    61,
   nil,   nil,    64,    11,    60,    64,    11,    60,   nil,    59,
    65,    66,    61,   nil,   nil,    61,   nil,   nil,    64,    11,
    60,   nil,    59,    65,    66,    59,   nil,   nil,    61,   nil,
   nil,    64,    11,    60,   nil,   nil,    65,    66,    59,   nil,
   nil,    61,   nil,   nil,    64,    11,    60,   nil,   nil,    65,
    66,    59,    65,    66,    61,   nil,   nil,    64,    11,    60,
    64,    11,    60,   nil,    59,    65,    66,    61,   nil,   nil,
    61,   nil,   nil,    64,    11,    60,   nil,    59,    65,    66,
    59,   nil,   nil,    61,   nil,   nil,    64,    11,    60,   nil,
   nil,    65,    66,    59,   nil,    11,    61,    88,    89,    90,
    91,    92,   nil,   nil,    65,    66,    59,    65,    66,    88,
    89,    90,    91,    92,   nil,   nil,   nil,    13,    25,    11,
    65,    66,    14,   nil,    26,   nil,    28,    29,    30,    31,
   nil,   nil,    32,    65,    66,   nil,    33,   nil,    34,   nil,
    11,    37,    25,   nil,   nil,   nil,    14,   nil,    26,   nil,
    28,    29,    30,    31,   nil,   nil,    32,    11,   nil,   nil,
    33,   nil,    34,    25,   nil,   nil,   nil,    14,   nil,    26,
    11,    28,    29,    30,    31,   nil,   nil,    32,   nil,   121,
    25,    33,   nil,    34,    14,    11,    26,   nil,    28,    29,
    30,    31,   nil,    25,    32,   nil,   nil,    14,    33,    26,
    34,    28,    29,    30,    31,   nil,    11,    32,    25,   nil,
   nil,    33,    14,    34,    26,   nil,    28,    29,    30,    31,
   nil,    11,    32,   nil,   nil,   nil,    33,   nil,    34,    25,
   nil,   nil,   nil,    14,    11,    26,   nil,    28,    29,    30,
    31,   nil,   nil,    32,    25,   nil,   nil,    33,    14,    34,
    26,    11,    28,    29,    30,    31,   nil,    25,    32,   nil,
   nil,    14,    33,    26,    34,    28,    29,    30,    31,   nil,
   nil,    32,   nil,   156,    25,    33,    11,    34,    14,   nil,
    26,   nil,    28,    29,    30,    31,   nil,   157,    32,    11,
   nil,   nil,    33,   nil,    34,   nil,   nil,   nil,   159,    25,
   nil,   nil,    11,    14,   nil,    26,   nil,    28,    29,    30,
    31,   160,    25,    32,   nil,    11,    14,    33,    26,    34,
    28,    29,    30,    31,   161,    25,    32,   nil,    11,    14,
    33,    26,    34,    28,    29,    30,    31,   nil,    25,    32,
   nil,    11,    14,    33,    26,    34,    28,    29,    30,    31,
   166,    25,    32,   nil,    11,    14,    33,    26,    34,    28,
    29,    30,    31,   nil,    25,    32,   nil,    11,    14,    33,
    26,    34,    28,    29,    30,    31,   nil,    25,    32,   nil,
    11,    14,    33,    26,    34,    28,    29,    30,    31,   171,
    25,    32,   nil,    11,    14,    33,    26,    34,    28,    29,
    30,    31,   173,    25,    32,   nil,    11,    14,    33,    26,
    34,    28,    29,    30,    31,   176,    25,    32,   nil,    11,
    14,    33,    26,    34,    28,    29,    30,    31,   nil,    25,
    32,   nil,    11,    14,    33,    26,    34,    28,    29,    30,
    31,   nil,    25,    32,   nil,    11,    14,    33,    26,    34,
    28,    29,    30,    31,   182,    25,    32,   nil,    11,    14,
    33,    26,    34,    28,    29,    30,    31,   184,    25,    32,
   nil,    11,    14,    33,    26,    34,    28,    29,    30,    31,
   nil,    25,    32,   nil,   nil,    14,    33,    26,    34,    28,
    29,    30,    31,   187,    25,    32,   nil,   nil,    14,    33,
    26,    34,    28,    29,    30,    31,   nil,   nil,    32,   nil,
   nil,   nil,    33,   nil,    34,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,   101,   102,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   113,   175,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   174,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,   102,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,   101,   102,   nil,   nil,
   nil,   nil,   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   111,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
   102,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   114,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,   102,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   183,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,   102,   nil,   nil,   138,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
   102,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
   102,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
   102,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
    88,    89,    90,    91,    92,    93,    94,   -85,   -85,   -85,
   -85,   -85,   -85,    88,    89,    90,    91,    92,    93,    94,
   -85,   -85,   -85,   -85,   -85,   -85,    88,    89,    90,    91,
    92,    93,    94,   -85,   -85,   -85,   -85,   -85,   -85,    88,
    89,    90,    91,    92,    93,    94,   -85,   -85,   -85,   -85,
   -85,   -85,    88,    89,    90,    91,    92,    93,    94,   -85,
   -85,   -85,   -85,   -85,   -85,    88,    89,    90,    91,    92,
    93,    94,   -85,   -85,   -85,   -85,   -85,   -85,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100 ]

racc_action_check = [
    29,    29,    29,    29,    30,    30,    30,    30,     1,    27,
     2,    29,    26,    26,    26,    30,   110,   110,   110,   110,
    27,    29,    26,    14,     4,    30,   109,   110,     5,    83,
    79,   109,    26,    79,    31,    31,    31,   110,    36,    14,
    14,    33,    33,    33,    31,    83,    83,     0,    29,    29,
     7,    33,    30,    30,    31,     0,    34,    34,    34,    26,
    26,    33,    36,    36,   110,   110,    34,    59,    59,    59,
    60,    60,    60,    61,    61,    61,    34,    59,   116,   116,
    60,    31,    31,    61,   150,   150,    10,    59,    33,    33,
    60,   117,    13,    61,   117,    16,    67,    67,    67,   151,
   151,    17,    18,    34,    34,    19,    67,    20,    21,    68,
    68,    68,    22,    23,    59,    59,    67,    60,    60,    68,
    61,    61,    88,    88,    88,    89,    89,    89,    24,    68,
    68,    28,    88,    32,    37,    89,    40,    43,    90,    90,
    90,    58,    88,    67,    67,    89,    70,    74,    90,    76,
    80,    91,    91,    91,    81,    85,    68,    68,    90,    87,
   118,    91,   122,   148,    92,    92,    92,   161,   164,    88,
    88,    91,    89,    89,    92,   171,   176,    93,    93,    93,
    94,    94,    94,   182,    92,    90,    90,    93,   nil,   nil,
    94,   nil,   nil,    95,    95,    95,   nil,    93,    91,    91,
    94,   nil,   nil,    95,   nil,   nil,    96,    96,    96,   nil,
   nil,    92,    92,    95,   nil,   nil,    96,   nil,   nil,    97,
    97,    97,   nil,   nil,    93,    93,    96,    94,    94,    97,
   nil,   nil,    98,    98,    98,    99,    99,    99,   nil,    97,
    95,    95,    98,   nil,   nil,    99,   nil,   nil,   100,   100,
   100,   nil,    98,    96,    96,    99,   nil,   nil,   100,   nil,
   nil,   101,   101,   101,   nil,   nil,    97,    97,   100,   nil,
   nil,   101,   nil,   nil,   102,   102,   102,   nil,   nil,    98,
    98,   101,    99,    99,   102,   nil,   nil,   112,   112,   112,
   140,   140,   140,   nil,   102,   100,   100,   112,   nil,   nil,
   140,   nil,   nil,   158,   158,   158,   nil,   112,   101,   101,
   140,   nil,   nil,   158,   nil,   nil,   174,   174,   174,   nil,
   nil,   102,   102,   158,   nil,     6,   174,   128,   128,   128,
   128,   128,   nil,   nil,   112,   112,   174,   140,   140,   129,
   129,   129,   129,   129,   nil,   nil,   nil,     6,     6,    12,
   158,   158,     6,   nil,     6,   nil,     6,     6,     6,     6,
   nil,   nil,     6,   174,   174,   nil,     6,   nil,     6,   nil,
    41,    12,    12,   nil,   nil,   nil,    12,   nil,    12,   nil,
    12,    12,    12,    12,   nil,   nil,    12,    84,   nil,   nil,
    12,   nil,    12,    41,   nil,   nil,   nil,    41,   nil,    41,
   111,    41,    41,    41,    41,   nil,   nil,    41,   nil,    84,
    84,    41,   nil,    41,    84,   113,    84,   nil,    84,    84,
    84,    84,   nil,   111,    84,   nil,   nil,   111,    84,   111,
    84,   111,   111,   111,   111,   nil,   114,   111,   113,   nil,
   nil,   111,   113,   111,   113,   nil,   113,   113,   113,   113,
   nil,   115,   113,   nil,   nil,   nil,   113,   nil,   113,   114,
   nil,   nil,   nil,   114,   119,   114,   nil,   114,   114,   114,
   114,   nil,   nil,   114,   115,   nil,   nil,   114,   115,   114,
   115,   143,   115,   115,   115,   115,   nil,   119,   115,   nil,
   nil,   119,   115,   119,   115,   119,   119,   119,   119,   nil,
   nil,   119,   nil,   143,   143,   119,   145,   119,   143,   nil,
   143,   nil,   143,   143,   143,   143,   nil,   143,   143,   146,
   nil,   nil,   143,   nil,   143,   nil,   nil,   nil,   145,   145,
   nil,   nil,   147,   145,   nil,   145,   nil,   145,   145,   145,
   145,   146,   146,   145,   nil,   149,   146,   145,   146,   145,
   146,   146,   146,   146,   147,   147,   146,   nil,   152,   147,
   146,   147,   146,   147,   147,   147,   147,   nil,   149,   147,
   nil,   157,   149,   147,   149,   147,   149,   149,   149,   149,
   152,   152,   149,   nil,   162,   152,   149,   152,   149,   152,
   152,   152,   152,   nil,   157,   152,   nil,   163,   157,   152,
   157,   152,   157,   157,   157,   157,   nil,   162,   157,   nil,
   167,   162,   157,   162,   157,   162,   162,   162,   162,   163,
   163,   162,   nil,   170,   163,   162,   163,   162,   163,   163,
   163,   163,   167,   167,   163,   nil,   172,   167,   163,   167,
   163,   167,   167,   167,   167,   170,   170,   167,   nil,   175,
   170,   167,   170,   167,   170,   170,   170,   170,   nil,   172,
   170,   nil,   178,   172,   170,   172,   170,   172,   172,   172,
   172,   nil,   175,   172,   nil,   180,   175,   172,   175,   172,
   175,   175,   175,   175,   178,   178,   175,   nil,   183,   178,
   175,   178,   175,   178,   178,   178,   178,   180,   180,   178,
   nil,   186,   180,   178,   180,   178,   180,   180,   180,   180,
   nil,   183,   180,   nil,   nil,   183,   180,   183,   180,   183,
   183,   183,   183,   186,   186,   183,   nil,   nil,   186,   183,
   186,   183,   186,   186,   186,   186,   nil,   nil,   186,   nil,
   nil,   nil,   186,   nil,   186,    77,    77,    77,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
   168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
   168,   168,   168,   168,   168,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    77,   168,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   168,   144,   144,
   144,   144,   144,   144,   144,   144,   144,   144,   144,   144,
   144,   144,   144,    75,    75,    75,    75,    75,    75,    75,
    75,    75,    75,    75,    75,    75,    75,    75,   nil,   nil,
   nil,   nil,   nil,   nil,   144,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    75,    78,    78,    78,    78,
    78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    78,   179,   179,   179,   179,   179,   179,   179,   179,
   179,   179,   179,   179,   179,   179,   179,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   179,   103,   103,
   103,   103,   103,   103,   103,   103,   103,   103,   103,   103,
   103,   103,   103,   nil,   nil,   103,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    71,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,    71,    71,   106,   106,   106,   106,
   106,   106,   106,   106,   106,   106,   106,   106,   106,   106,
   106,   107,   107,   107,   107,   107,   107,   107,   107,   107,
   107,   107,   107,   107,   107,   107,   141,   141,   141,   141,
   141,   141,   141,   141,   141,   141,   141,   141,   141,   141,
   141,   154,   154,   154,   154,   154,   154,   154,   154,   154,
   154,   154,   154,   154,   154,   154,   137,   137,   137,   137,
   137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
   130,   130,   130,   130,   130,   130,   130,   130,   130,   130,
   130,   130,   130,   131,   131,   131,   131,   131,   131,   131,
   131,   131,   131,   131,   131,   131,   132,   132,   132,   132,
   132,   132,   132,   132,   132,   132,   132,   132,   132,   133,
   133,   133,   133,   133,   133,   133,   133,   133,   133,   133,
   133,   133,   134,   134,   134,   134,   134,   134,   134,   134,
   134,   134,   134,   134,   134,   135,   135,   135,   135,   135,
   135,   135,   135,   135,   135,   135,   135,   135,   136,   136,
   136,   136,   136,   136,   136,   136,   136,   136,   136,   136,
   136 ]

racc_action_pointer = [
    25,     8,   -20,   nil,     2,    24,   321,    50,   nil,   nil,
    63,   nil,   345,    65,    -9,   nil,    68,    74,    75,    78,
    80,    81,    85,    86,   101,   nil,     9,   -14,   127,    -2,
     2,    31,   129,    38,    53,   nil,    14,   107,   nil,   nil,
   109,   366,   nil,   133,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   909,   nil,   nil,   118,    64,
    67,    70,   nil,   nil,   nil,   nil,   nil,    93,   106,   nil,
   117,   924,   nil,   nil,   118,   806,   107,   738,   839,     5,
   126,   150,   nil,    -3,   383,   126,   nil,   125,   119,   122,
   135,   148,   161,   174,   177,   190,   203,   216,   229,   232,
   245,   258,   271,   891,   nil,   nil,   939,   954,   nil,     2,
    14,   396,   284,   411,   432,   447,    30,    66,   131,   460,
   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,   320,   332,
  1013,  1026,  1039,  1052,  1065,  1078,  1091,   999,   nil,   nil,
   287,   969,   nil,   477,   791,   502,   515,   528,   138,   541,
    36,    51,   554,   nil,   984,   nil,   nil,   567,   300,   nil,
   nil,   140,   580,   593,   143,   nil,   nil,   606,   753,   nil,
   619,   148,   632,   nil,   313,   645,   149,   nil,   658,   865,
   671,   nil,   156,   684,   nil,   nil,   697,   nil ]

racc_action_default = [
    -4,   -85,    -2,    -3,    -6,   -85,   -85,   -85,    -1,    -5,
   -85,   -84,   -85,   -85,   -85,   -24,   -85,   -85,   -85,   -85,
   -85,   -85,   -85,   -85,   -85,   -34,   -85,   -85,   -85,   -85,
   -85,   -85,   -85,   -85,   -85,   188,   -85,   -85,   -23,   -14,
   -85,   -85,   -17,   -85,   -77,   -78,   -25,   -26,   -27,   -28,
   -29,   -30,   -31,   -32,   -33,   -35,   -52,   -53,   -54,   -85,
   -85,   -85,   -79,   -80,   -81,   -82,   -83,   -85,   -85,   -37,
   -38,   -40,   -41,   -44,   -39,   -85,   -85,   -85,   -85,   -85,
   -85,   -85,   -13,   -85,   -85,   -19,   -20,   -21,   -85,   -85,
   -85,   -85,   -85,   -85,   -85,   -85,   -85,   -85,   -85,   -85,
   -85,   -85,   -85,   -85,   -56,   -57,   -36,   -75,   -73,   -85,
   -85,   -85,   -85,   -85,   -85,   -85,   -85,   -85,   -12,   -85,
   -18,   -16,   -85,   -58,   -59,   -60,   -61,   -62,   -63,   -64,
   -65,   -66,   -67,   -68,   -69,   -70,   -71,   -72,   -55,   -74,
   -85,   -42,   -43,   -85,   -85,   -85,   -85,   -85,   -85,   -85,
   -85,   -85,   -85,   -22,   -76,   -45,   -46,   -85,   -85,   -50,
   -51,   -85,   -85,   -85,   -85,   -11,   -15,   -85,   -85,    -7,
   -85,   -85,   -85,   -47,   -85,   -85,   -85,    -8,   -85,   -85,
   -85,    -9,   -85,   -85,   -49,   -10,   -85,   -48 ]

racc_goto_table = [
    10,    27,    42,     1,    80,     2,     3,    27,     8,     9,
    70,    74,    40,    12,    85,    81,    86,   142,   155,   109,
   nil,   nil,   nil,    69,   nil,   nil,   nil,    76,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,    87,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,    84,   nil,
   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   120,   nil,   nil,   nil,   nil,   118,   nil,   nil,    27,
   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    38,   148,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,    27,    27,
    27,   nil,   nil,   nil,    27,   nil,   nil,   153,   143,   165,
   145,   146,   147,   nil,    24,   nil,   152,   nil,   nil,   164,
    81,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,
    27,    27,    27,   nil,    27,   nil,   nil,    27,   nil,   nil,
   nil,    24,    27,    24,    24,    24,   163,    27,    27,    24,
   nil,   nil,    27,   nil,   167,    27,    38,    27,   nil,   170,
    27,   nil,   nil,    27,   nil,    27,   nil,   nil,    27,   178,
   nil,    27,   180,    24,   nil,    24,    24,    24,   nil,    24,
   186,   nil,    24,   nil,   nil,   nil,   nil,    24,   nil,   nil,
   nil,   nil,    24,    24,   nil,   nil,   nil,    24,   nil,    55,
    24,   nil,    24,   nil,    75,    24,    77,    78,    24,   nil,
    24,   nil,   nil,    24,   nil,    38,    24,    38,    38,    38,
   nil,   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   103,   104,   105,    38,   nil,   nil,   nil,    38,
   106,   107,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    38,   nil,    38,   nil,   nil,   nil,   nil,   nil,    38,   nil,
   nil,   123,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   141,   nil,   144,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   168,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   179 ]

racc_goto_check = [
     5,     5,    11,     1,     7,     2,     3,     5,     3,     2,
    23,    23,    10,     6,    12,     8,    13,    24,    25,    27,
   nil,   nil,   nil,     5,   nil,   nil,   nil,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,     6,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,     5,   nil,   nil,     5,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    14,     8,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,     5,     5,
     5,   nil,   nil,   nil,     5,   nil,   nil,     5,     6,     7,
     6,     6,     6,   nil,    21,   nil,     6,   nil,   nil,     8,
     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
     5,     5,     5,   nil,     5,   nil,   nil,     5,   nil,   nil,
   nil,    21,     5,    21,    21,    21,     6,     5,     5,    21,
   nil,   nil,     5,   nil,     6,     5,    14,     5,   nil,     6,
     5,   nil,   nil,     5,   nil,     5,   nil,   nil,     5,     6,
   nil,     5,     6,    21,   nil,    21,    21,    21,   nil,    21,
     6,   nil,    21,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,    21,    21,   nil,   nil,   nil,    21,   nil,    22,
    21,   nil,    21,   nil,    22,    21,    22,    22,    21,   nil,
    21,   nil,   nil,    21,   nil,    14,    21,    14,    14,    14,
   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,    22,    22,    14,   nil,   nil,   nil,    14,
    22,    22,    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    14,   nil,    14,   nil,   nil,   nil,   nil,   nil,    14,   nil,
   nil,    22,    22,    22,    22,    22,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    22,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22 ]

racc_goto_pointer = [
   nil,     3,     5,     6,   nil,    -5,     7,   -32,   -21,   nil,
    -2,   -12,   -29,   -27,    82,   nil,   nil,   nil,   nil,   nil,
   nil,    40,   183,   -19,   -93,  -125,   nil,   -49,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,    58,   nil,   nil,    43,    17,
   nil,   nil,   nil,    16,    15,    18,    19,    20,    21,    22,
    23,    57,    71,   nil,    72,   nil,    56,   nil,    62,    63 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 53, :_reduce_1,
  1, 53, :_reduce_2,
  1, 53, :_reduce_3,
  0, 53, :_reduce_4,
  2, 54, :_reduce_5,
  1, 54, :_reduce_6,
  8, 56, :_reduce_7,
  9, 56, :_reduce_8,
  10, 56, :_reduce_9,
  11, 56, :_reduce_10,
  4, 59, :_reduce_11,
  2, 59, :_reduce_12,
  4, 55, :_reduce_13,
  3, 55, :_reduce_14,
  6, 61, :_reduce_15,
  4, 61, :_reduce_16,
  1, 62, :_reduce_17,
  3, 62, :_reduce_18,
  2, 63, :_reduce_19,
  2, 63, :_reduce_20,
  1, 64, :_reduce_21,
  3, 64, :_reduce_22,
  2, 58, :_reduce_23,
  1, 58, :_reduce_24,
  2, 66, :_reduce_25,
  2, 66, :_reduce_26,
  2, 66, :_reduce_27,
  2, 66, :_reduce_28,
  2, 66, :_reduce_29,
  2, 66, :_reduce_30,
  2, 66, :_reduce_31,
  2, 66, :_reduce_32,
  2, 66, :_reduce_33,
  1, 66, :_reduce_34,
  2, 72, :_reduce_35,
  3, 65, :_reduce_36,
  2, 67, :_reduce_37,
  2, 68, :_reduce_38,
  2, 68, :_reduce_39,
  1, 75, :_reduce_40,
  1, 75, :_reduce_41,
  3, 75, :_reduce_42,
  3, 75, :_reduce_43,
  1, 76, :_reduce_44,
  5, 69, :_reduce_45,
  1, 77, :_reduce_46,
  3, 77, :_reduce_47,
  11, 70, :_reduce_48,
  9, 70, :_reduce_49,
  5, 70, :_reduce_50,
  5, 71, :_reduce_51,
  1, 74, :_reduce_52,
  1, 74, :_reduce_53,
  1, 74, :_reduce_54,
  3, 74, :_reduce_55,
  2, 74, :_reduce_56,
  2, 74, :_reduce_57,
  3, 74, :_reduce_58,
  3, 74, :_reduce_59,
  3, 74, :_reduce_60,
  3, 74, :_reduce_61,
  3, 74, :_reduce_62,
  3, 74, :_reduce_63,
  3, 74, :_reduce_64,
  3, 74, :_reduce_65,
  3, 74, :_reduce_66,
  3, 74, :_reduce_67,
  3, 74, :_reduce_68,
  3, 74, :_reduce_69,
  3, 74, :_reduce_70,
  3, 74, :_reduce_71,
  3, 74, :_reduce_72,
  3, 73, :_reduce_73,
  4, 73, :_reduce_74,
  1, 79, :_reduce_75,
  3, 79, :_reduce_76,
  1, 60, :_reduce_77,
  1, 60, :_reduce_78,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 80, :_reduce_81,
  1, 81, :_reduce_82,
  1, 81, :_reduce_83,
  1, 57, :_reduce_84 ]

racc_reduce_n = 85

racc_shift_n = 188

racc_token_table = {
  false => 0,
  :error => 1,
  "TkString" => 2,
  "TkNum" => 3,
  "TkId" => 4,
  "not" => 5,
  :UMINUS => 6,
  "*" => 7,
  "/" => 8,
  "%" => 9,
  "div" => 10,
  "mod" => 11,
  "+" => 12,
  "-" => 13,
  "==" => 14,
  "/=" => 15,
  ">=" => 16,
  "<=" => 17,
  ">" => 18,
  "<" => 19,
  "and" => 20,
  "or" => 21,
  "func" => 22,
  "(" => 23,
  ")" => 24,
  "begin" => 25,
  "end" => 26,
  ";" => 27,
  "->" => 28,
  "," => 29,
  "program" => 30,
  "with" => 31,
  "do" => 32,
  "return" => 33,
  "=" => 34,
  "read" => 35,
  "write" => 36,
  "writeln" => 37,
  "if" => 38,
  "then" => 39,
  "else" => 40,
  "for" => 41,
  "from" => 42,
  "to" => 43,
  "by" => 44,
  "repeat" => 45,
  "times" => 46,
  "while" => 47,
  "number" => 48,
  "boolean" => 49,
  "true" => 50,
  "false" => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"TkString\"",
  "\"TkNum\"",
  "\"TkId\"",
  "\"not\"",
  "UMINUS",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"div\"",
  "\"mod\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"and\"",
  "\"or\"",
  "\"func\"",
  "\"(\"",
  "\")\"",
  "\"begin\"",
  "\"end\"",
  "\";\"",
  "\"->\"",
  "\",\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"return\"",
  "\"=\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"times\"",
  "\"while\"",
  "\"number\"",
  "\"boolean\"",
  "\"true\"",
  "\"false\"",
  "$start",
  "ESTRUCTURA",
  "FUNCIONES",
  "PROGRAMA",
  "FUNCION",
  "IDENTIFICADOR",
  "INSTRUCCIONES",
  "PARAMETROS",
  "TIPO",
  "BLOQUE",
  "LISTA_DECLARACION",
  "DECLARACION",
  "LISTA_IDENTIFICADOR",
  "ASIGNACION",
  "INSTRUCCION",
  "ENTRADA",
  "SALIDA",
  "CONDICIONAL",
  "REPETICION_D",
  "REPETICION_I",
  "RETURN",
  "LLAMADA_FUNCION",
  "EXPRESION",
  "ESCRIBIR",
  "STRING",
  "COND",
  "LITERAL",
  "LISTA_PASE_PARAMETROS",
  "LITERAL_NUMBER",
  "LITERAL_BOOLEAN" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_1(val, _values, result)
     result = Estructura.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_2(val, _values, result)
     result = Estructura.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_3(val, _values, result)
     result = Estructura.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_4(val, _values, result)
     result = Estructura.new(nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_5(val, _values, result)
     result = ListaFunciones.new(val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1], nil, nil, val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_8(val, _values, result)
     result = Funcion.new(val[1], val[3], nil, val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_9(val, _values, result)
     result = Funcion.new(val[1], nil, val[5], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_10(val, _values, result)
     result = Funcion.new(val[1], val[3], val[6], val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_11(val, _values, result)
     result = Parametros.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_12(val, _values, result)
     result = Parametros.new(val[0],val[1],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_13(val, _values, result)
     result = Programa.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_14(val, _values, result)
     result = Programa.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_15(val, _values, result)
     result = Bloque.new(val[1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_16(val, _values, result)
     result = Bloque.new(nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_17(val, _values, result)
     result = ListaDeclaracion.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_18(val, _values, result)
     result = ListaDeclaracion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_19(val, _values, result)
     result = Declaracion.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_20(val, _values, result)
     result = Declaracion.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_21(val, _values, result)
     result = ListaId.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_22(val, _values, result)
     result = ListaId.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_23(val, _values, result)
     result = Instrucciones.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_24(val, _values, result)
     result = Instrucciones.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_30(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_32(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_33(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_34(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_35(val, _values, result)
     result = Return.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_36(val, _values, result)
     result = Asignacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_37(val, _values, result)
     result = Entrada.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_38(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_39(val, _values, result)
     result = Salida.new(val[1], "SALTO") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_40(val, _values, result)
     result = Escribir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_41(val, _values, result)
     result = Escribir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_42(val, _values, result)
     result = Escribir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_43(val, _values, result)
     result = Escribir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_44(val, _values, result)
     result = Str.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 147)
  def _reduce_45(val, _values, result)
     result = Condicional.new(val[1],val[3],val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_46(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_47(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_48(val, _values, result)
     result = For.new(val[1], val[3], val[5], val[7], val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_49(val, _values, result)
     result = For.new(val[1], val[3], val[5], nil, val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_50(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_51(val, _values, result)
     result = RepeticionI.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_52(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_53(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_54(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_55(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_56(val, _values, result)
     result = OpNot.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_57(val, _values, result)
     result = OpUMINUS.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_58(val, _values, result)
     result = OpMultiplicacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 177)
  def _reduce_59(val, _values, result)
     result = OpDivisionE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 178)
  def _reduce_60(val, _values, result)
     result = OpModE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 179)
  def _reduce_61(val, _values, result)
     result = OpDivision.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 180)
  def _reduce_62(val, _values, result)
     result = OpMod.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_63(val, _values, result)
     result = OpSuma.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 182)
  def _reduce_64(val, _values, result)
     result = OpResta.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 183)
  def _reduce_65(val, _values, result)
     result = OpEquivalente.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_66(val, _values, result)
     result = OpDesigual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_67(val, _values, result)
     result = OpMayorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 186)
  def _reduce_68(val, _values, result)
     result = OpMenorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 187)
  def _reduce_69(val, _values, result)
     result = OpMayor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 188)
  def _reduce_70(val, _values, result)
     result = OpMenor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 189)
  def _reduce_71(val, _values, result)
     result = OpAnd.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 190)
  def _reduce_72(val, _values, result)
     result = OpOr.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 195)
  def _reduce_73(val, _values, result)
     result = LlamadaFuncion.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 196)
  def _reduce_74(val, _values, result)
     result = LlamadaFuncion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_75(val, _values, result)
     result = ListaPaseParametros.new(nil,val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 202)
  def _reduce_76(val, _values, result)
     result = ListaPaseParametros.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 207)
  def _reduce_77(val, _values, result)
     result = TipoNum.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 208)
  def _reduce_78(val, _values, result)
     result = TipoBoolean.new() 
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

module_eval(<<'.,.,', 'parser.y', 219)
  def _reduce_81(val, _values, result)
     result = LiteralNumerico.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 224)
  def _reduce_82(val, _values, result)
     result = LiteralBooleano.new("true") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 225)
  def _reduce_83(val, _values, result)
     result = LiteralBooleano.new("false") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 230)
  def _reduce_84(val, _values, result)
     result =  Identificador.new(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ParserRtn
