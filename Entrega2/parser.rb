#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lexer'
require_relative 'clasesParser'

class ErrorSintactico < RuntimeError

	def initialize(token)
		@token = token
	end

	def to_s
		"fila: " + @token.fila.to_s() + ", columna: " + @token.columna.to_s() + ", token inesperado: #{@token.token} \n"   # EL PROBLEMA ES ACA
	end
end

class ParserRtn < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 246)
	
	def initialize(tokens)
		@tokens = tokens
		@yydebug = true
		super()
	end 

	def parse
		do_parse
	end

	def next_token
		#puts @tokens
		@tokens.shift
	end

	def on_error(id, token, pila)
		raise ErrorSintactico.new(token)
	end
	
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    86,    77,    11,    73,    86,    77,    11,    73,     7,    81,
     6,    74,    77,    11,    73,    74,    86,    77,    11,    73,
    80,    72,    74,    18,     5,    72,   150,    74,    11,    56,
    52,   151,    72,    53,    77,    11,    73,    72,    23,    21,
    22,    77,    11,    73,    74,    21,    22,     5,    78,    79,
    13,    74,    78,    79,    72,     6,    77,    11,    73,    78,
    79,    72,    21,    22,    78,    79,    74,    77,    11,    73,
    77,    11,    73,    77,    11,    73,    72,    74,    21,    22,
    74,    78,    79,    74,    21,    22,    14,    72,    78,    79,
    72,    95,    15,    72,    96,    16,    77,    11,    73,    21,
    22,    26,    27,    78,    79,    11,    74,    54,    11,    77,
    11,    73,    60,    61,    78,    79,    72,    78,    79,    74,
    78,    79,    77,    11,    73,    77,    11,    73,    62,    72,
   120,    63,    74,    64,    65,    74,    66,    67,    77,    11,
    73,    11,    72,    78,    79,    72,    11,    92,    74,    80,
    97,    77,    11,    73,    99,    81,    78,    79,    72,   122,
   122,    74,   124,    11,    77,    11,    73,   129,   158,    78,
    79,    72,    78,    79,    74,   161,   162,    77,    11,    73,
    77,    11,    73,   171,    72,    78,    79,    74,   175,   180,
    74,   nil,   nil,    77,    11,    73,   nil,    72,    78,    79,
    72,   nil,   nil,    74,   nil,   nil,    77,    11,    73,   nil,
   nil,    78,    79,    72,   nil,   nil,    74,   nil,   nil,    77,
    11,    73,   nil,   nil,    78,    79,    72,    78,    79,    74,
   nil,   nil,    77,    11,    73,    77,    11,    73,   nil,    72,
    78,    79,    74,   nil,   nil,    74,   nil,   nil,    77,    11,
    73,   nil,    72,    78,    79,    72,   nil,   nil,    74,   nil,
   nil,    77,    11,    73,   nil,   nil,    78,    79,    72,   nil,
   nil,    74,   nil,   nil,    77,    11,    73,   nil,   nil,    78,
    79,    72,    78,    79,    74,   nil,   nil,    77,    11,    73,
    77,    11,    73,   nil,    72,    78,    79,    74,   nil,   nil,
    74,   nil,   nil,    77,    11,    73,   nil,    72,    78,    79,
    72,   nil,   nil,    74,   nil,   nil,    77,    11,    73,   nil,
   nil,    78,    79,    72,   nil,    11,    74,   100,   101,   102,
   103,   104,   nil,   nil,    78,    79,    72,    78,    79,   100,
   101,   102,   103,   104,   nil,   nil,   nil,    11,    39,   nil,
    78,    79,    13,   nil,    40,   nil,    42,    43,    44,    45,
    11,   nil,    46,    78,    79,   nil,    47,   nil,    48,    58,
    39,   nil,   nil,    11,    13,   nil,    40,   nil,    42,    43,
    44,    45,   nil,    39,    46,   nil,    11,    13,    47,    40,
    48,    42,    43,    44,    45,   nil,    39,    46,   nil,    11,
    13,    47,    40,    48,    42,    43,    44,    45,   128,    39,
    46,   nil,    11,    13,    47,    40,    48,    42,    43,    44,
    45,   nil,    39,    46,   nil,    11,    13,    47,    40,    48,
    42,    43,    44,    45,   133,    39,    46,   nil,    11,    13,
    47,    40,    48,    42,    43,    44,    45,   nil,    39,    46,
   nil,    11,    13,    47,    40,    48,    42,    43,    44,    45,
   nil,    39,    46,   nil,    11,    13,    47,    40,    48,    42,
    43,    44,    45,   nil,    39,    46,   nil,    11,    13,    47,
    40,    48,    42,    43,    44,    45,   nil,    39,    46,   nil,
    11,    13,    47,    40,    48,    42,    43,    44,    45,   160,
    39,    46,   nil,   nil,    13,    47,    40,    48,    42,    43,
    44,    45,   165,    39,    46,    11,   nil,    13,    47,    40,
    48,    42,    43,    44,    45,   nil,   166,    46,    11,   nil,
   nil,    47,   nil,    48,   nil,   nil,   nil,   168,    39,   nil,
   nil,    11,    13,   nil,    40,   nil,    42,    43,    44,    45,
   169,    39,    46,   nil,    11,    13,    47,    40,    48,    42,
    43,    44,    45,   170,    39,    46,   nil,    11,    13,    47,
    40,    48,    42,    43,    44,    45,   nil,    39,    46,   nil,
    11,    13,    47,    40,    48,    42,    43,    44,    45,   nil,
    39,    46,   nil,    11,    13,    47,    40,    48,    42,    43,
    44,    45,   176,    39,    46,   nil,    11,    13,    47,    40,
    48,    42,    43,    44,    45,   177,    39,    46,   nil,    11,
    13,    47,    40,    48,    42,    43,    44,    45,   nil,    39,
    46,   nil,    11,    13,    47,    40,    48,    42,    43,    44,
    45,   184,    39,    46,   nil,    11,    13,    47,    40,    48,
    42,    43,    44,    45,   nil,    39,    46,   nil,   nil,    13,
    47,    40,    48,    42,    43,    44,    45,   186,    39,    46,
   nil,   nil,    13,    47,    40,    48,    42,    43,    44,    45,
   nil,   nil,    46,   nil,   nil,   nil,    47,   nil,    48,   100,
   101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
   111,   112,   113,   114,   100,   101,   102,   103,   104,   105,
   106,   107,   108,   109,   110,   111,   112,   113,   114,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   125,   179,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   178,   100,   101,   102,   103,   104,   105,   106,   107,
   108,   109,   110,   111,   112,   113,   114,   100,   101,   102,
   103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
   113,   114,   nil,   nil,   nil,   nil,   nil,   nil,   167,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   126,   100,   101,   102,   103,
   104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   183,   100,   101,   102,   103,   104,   105,   106,   107,
   108,   109,   110,   111,   112,   113,   114,   nil,   nil,   149,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   100,   101,   102,   103,   104,
   105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   100,   101,   102,   103,   104,
   105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   114,   100,   101,   102,   103,   104,
   105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   113,   100,   101,   102,   103,   104,   105,
   106,   -82,   -82,   -82,   -82,   -82,   -82,   100,   101,   102,
   103,   104,   105,   106,   -82,   -82,   -82,   -82,   -82,   -82,
   100,   101,   102,   103,   104,   105,   106,   -82,   -82,   -82,
   -82,   -82,   -82,   100,   101,   102,   103,   104,   105,   106,
   -82,   -82,   -82,   -82,   -82,   -82,   100,   101,   102,   103,
   104,   105,   106,   -82,   -82,   -82,   -82,   -82,   -82,   100,
   101,   102,   103,   104,   105,   106,   -82,   -82,   -82,   -82,
   -82,   -82,   100,   101,   102,   103,   104,   105,   106,   107,
   108,   109,   110,   111,   112 ]

racc_action_check = [
    43,    43,    43,    43,    44,    44,    44,    44,     1,    41,
     2,    43,    40,    40,    40,    44,   122,   122,   122,   122,
    41,    43,    40,    13,     4,    44,   121,   122,     5,    27,
    23,   121,    40,    23,    45,    45,    45,   122,    15,    13,
    13,    47,    47,    47,    45,    27,    27,     0,    43,    43,
     6,    47,    44,    44,    45,     0,    48,    48,    48,    40,
    40,    47,    15,    15,   122,   122,    48,    72,    72,    72,
    73,    73,    73,    74,    74,    74,    48,    72,    53,    53,
    73,    45,    45,    74,    96,    96,     7,    72,    47,    47,
    73,    54,    10,    74,    54,    12,    80,    80,    80,    97,
    97,    16,    17,    48,    48,    20,    80,    24,    25,    81,
    81,    81,    30,    31,    72,    72,    80,    73,    73,    81,
    74,    74,   100,   100,   100,   101,   101,   101,    32,    81,
    81,    33,   100,    34,    35,   101,    36,    38,   102,   102,
   102,    42,   100,    80,    80,   101,    46,    49,   102,    51,
    55,   103,   103,   103,    58,    71,    81,    81,   102,    83,
    87,   103,    89,    92,   104,   104,   104,    94,   128,   100,
   100,   103,   101,   101,   104,   131,   133,   105,   105,   105,
   106,   106,   106,   160,   104,   102,   102,   105,   170,   176,
   106,   nil,   nil,   107,   107,   107,   nil,   105,   103,   103,
   106,   nil,   nil,   107,   nil,   nil,   108,   108,   108,   nil,
   nil,   104,   104,   107,   nil,   nil,   108,   nil,   nil,   109,
   109,   109,   nil,   nil,   105,   105,   108,   106,   106,   109,
   nil,   nil,   110,   110,   110,   111,   111,   111,   nil,   109,
   107,   107,   110,   nil,   nil,   111,   nil,   nil,   112,   112,
   112,   nil,   110,   108,   108,   111,   nil,   nil,   112,   nil,
   nil,   113,   113,   113,   nil,   nil,   109,   109,   112,   nil,
   nil,   113,   nil,   nil,   114,   114,   114,   nil,   nil,   110,
   110,   113,   111,   111,   114,   nil,   nil,   124,   124,   124,
   151,   151,   151,   nil,   114,   112,   112,   124,   nil,   nil,
   151,   nil,   nil,   167,   167,   167,   nil,   124,   113,   113,
   151,   nil,   nil,   167,   nil,   nil,   178,   178,   178,   nil,
   nil,   114,   114,   167,   nil,    18,   178,   139,   139,   139,
   139,   139,   nil,   nil,   124,   124,   178,   151,   151,   140,
   140,   140,   140,   140,   nil,   nil,   nil,    28,    18,   nil,
   167,   167,    18,   nil,    18,   nil,    18,    18,    18,    18,
    52,   nil,    18,   178,   178,   nil,    18,   nil,    18,    28,
    28,   nil,   nil,    56,    28,   nil,    28,   nil,    28,    28,
    28,    28,   nil,    52,    28,   nil,    93,    52,    28,    52,
    28,    52,    52,    52,    52,   nil,    56,    52,   nil,    95,
    56,    52,    56,    52,    56,    56,    56,    56,    93,    93,
    56,   nil,    98,    93,    56,    93,    56,    93,    93,    93,
    93,   nil,    95,    93,   nil,   123,    95,    93,    95,    93,
    95,    95,    95,    95,    98,    98,    95,   nil,   125,    98,
    95,    98,    95,    98,    98,    98,    98,   nil,   123,    98,
   nil,   126,   123,    98,   123,    98,   123,   123,   123,   123,
   nil,   125,   123,   nil,   129,   125,   123,   125,   123,   125,
   125,   125,   125,   nil,   126,   125,   nil,   130,   126,   125,
   126,   125,   126,   126,   126,   126,   nil,   129,   126,   nil,
   154,   129,   126,   129,   126,   129,   129,   129,   129,   130,
   130,   129,   nil,   nil,   130,   129,   130,   129,   130,   130,
   130,   130,   154,   154,   130,   156,   nil,   154,   130,   154,
   130,   154,   154,   154,   154,   nil,   154,   154,   157,   nil,
   nil,   154,   nil,   154,   nil,   nil,   nil,   156,   156,   nil,
   nil,   159,   156,   nil,   156,   nil,   156,   156,   156,   156,
   157,   157,   156,   nil,   161,   157,   156,   157,   156,   157,
   157,   157,   157,   159,   159,   157,   nil,   166,   159,   157,
   159,   157,   159,   159,   159,   159,   nil,   161,   159,   nil,
   172,   161,   159,   161,   159,   161,   161,   161,   161,   nil,
   166,   161,   nil,   173,   166,   161,   166,   161,   166,   166,
   166,   166,   172,   172,   166,   nil,   179,   172,   166,   172,
   166,   172,   172,   172,   172,   173,   173,   172,   nil,   182,
   173,   172,   173,   172,   173,   173,   173,   173,   nil,   179,
   173,   nil,   183,   179,   173,   179,   173,   179,   179,   179,
   179,   182,   182,   179,   nil,   185,   182,   179,   182,   179,
   182,   182,   182,   182,   nil,   183,   182,   nil,   nil,   183,
   182,   183,   182,   183,   183,   183,   183,   185,   185,   183,
   nil,   nil,   185,   183,   185,   183,   185,   185,   185,   185,
   nil,   nil,   185,   nil,   nil,   nil,   185,   nil,   185,    90,
    90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
    90,    90,    90,    90,   174,   174,   174,   174,   174,   174,
   174,   174,   174,   174,   174,   174,   174,   174,   174,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,   174,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   174,   155,   155,   155,   155,   155,   155,   155,   155,
   155,   155,   155,   155,   155,   155,   155,    88,    88,    88,
    88,    88,    88,    88,    88,    88,    88,    88,    88,    88,
    88,    88,   nil,   nil,   nil,   nil,   nil,   nil,   155,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,
    91,    91,    91,    91,    91,    91,    91,    91,    91,    91,
    91,    91,    91,    91,    91,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    91,   181,   181,   181,   181,
   181,   181,   181,   181,   181,   181,   181,   181,   181,   181,
   181,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   181,   115,   115,   115,   115,   115,   115,   115,   115,
   115,   115,   115,   115,   115,   115,   115,   nil,   nil,   115,
    68,    68,    68,    68,    68,    68,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    84,    84,    84,    84,    84,
    84,    84,    84,    84,    84,    84,    84,    84,    84,    84,
   118,   118,   118,   118,   118,   118,   118,   118,   118,   118,
   118,   118,   118,   118,   118,   119,   119,   119,   119,   119,
   119,   119,   119,   119,   119,   119,   119,   119,   119,   119,
   152,   152,   152,   152,   152,   152,   152,   152,   152,   152,
   152,   152,   152,   152,   152,   163,   163,   163,   163,   163,
   163,   163,   163,   163,   163,   163,   163,   163,   163,   163,
   148,   148,   148,   148,   148,   148,   148,   148,   148,   148,
   148,   148,   148,   148,   141,   141,   141,   141,   141,   141,
   141,   141,   141,   141,   141,   141,   141,   142,   142,   142,
   142,   142,   142,   142,   142,   142,   142,   142,   142,   142,
   143,   143,   143,   143,   143,   143,   143,   143,   143,   143,
   143,   143,   143,   144,   144,   144,   144,   144,   144,   144,
   144,   144,   144,   144,   144,   144,   145,   145,   145,   145,
   145,   145,   145,   145,   145,   145,   145,   145,   145,   146,
   146,   146,   146,   146,   146,   146,   146,   146,   146,   146,
   146,   146,   147,   147,   147,   147,   147,   147,   147,   147,
   147,   147,   147,   147,   147 ]

racc_action_pointer = [
    25,     8,   -20,   nil,     2,    24,    19,    86,   nil,   nil,
    69,   nil,    69,    -9,   nil,    14,    74,    75,   321,   nil,
   101,   nil,   nil,     5,    83,   104,   nil,    -3,   343,   nil,
    85,    86,   101,   104,   106,   107,   109,   nil,   110,   nil,
     9,   -14,   137,    -2,     2,    31,   142,    38,    53,   118,
   nil,   115,   356,    30,    66,   121,   369,   nil,   127,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   853,   nil,
   nil,   132,    64,    67,    70,   nil,   nil,   nil,   nil,   nil,
    93,   106,   nil,   130,   868,   nil,   nil,   131,   750,   120,
   682,   783,   159,   382,   142,   395,    36,    51,   408,   nil,
   119,   122,   135,   148,   161,   174,   177,   190,   203,   216,
   229,   232,   245,   258,   271,   835,   nil,   nil,   883,   898,
   nil,     2,    14,   421,   284,   434,   447,   nil,   141,   460,
   473,   150,   nil,   149,   nil,   nil,   nil,   nil,   nil,   320,
   332,   957,   970,   983,   996,  1009,  1022,  1035,   943,   nil,
   nil,   287,   913,   nil,   486,   735,   511,   524,   nil,   537,
   156,   550,   nil,   928,   nil,   nil,   563,   300,   nil,   nil,
   161,   nil,   576,   589,   697,   nil,   162,   nil,   313,   602,
   nil,   809,   615,   628,   nil,   641,   nil ]

racc_action_default = [
   -82,   -82,   -82,    -2,    -4,   -82,   -82,   -82,    -1,    -3,
   -82,   -81,   -82,   -82,   187,   -82,   -82,   -82,   -82,   -14,
   -82,   -74,   -75,   -82,   -82,   -82,   -11,   -82,   -82,   -21,
   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -29,   -82,   -31,
   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -16,
   -17,   -18,   -82,   -82,   -82,   -10,   -82,   -15,   -82,   -20,
   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -30,   -32,   -49,
   -50,   -51,   -82,   -82,   -82,   -76,   -77,   -78,   -79,   -80,
   -82,   -82,   -34,   -35,   -37,   -38,   -41,   -36,   -82,   -82,
   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -13,
   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,   -82,
   -82,   -82,   -82,   -82,   -82,   -82,   -53,   -54,   -33,   -72,
   -70,   -82,   -82,   -82,   -82,   -82,   -82,   -19,   -82,   -82,
   -82,   -82,    -9,   -82,   -55,   -56,   -57,   -58,   -59,   -60,
   -61,   -62,   -63,   -64,   -65,   -66,   -67,   -68,   -69,   -52,
   -71,   -82,   -39,   -40,   -82,   -82,   -82,   -82,    -5,   -82,
   -82,   -82,   -12,   -73,   -42,   -43,   -82,   -82,   -47,   -48,
   -82,    -6,   -82,   -82,   -82,    -7,   -82,   -44,   -82,   -82,
    -8,   -82,   -82,   -82,   -46,   -82,   -45 ]

racc_goto_table = [
    10,    24,    19,     2,    25,    28,     3,     9,     8,    83,
    87,     1,    12,    41,    17,    51,    57,    49,    50,   153,
    55,    38,   164,    41,   121,   nil,   nil,   nil,   nil,   nil,
   nil,    38,   nil,   nil,   nil,   nil,   nil,    82,   nil,    93,
   nil,    89,    94,    98,   nil,   nil,   nil,    41,   nil,   nil,
   nil,    41,   nil,   nil,   nil,    38,   nil,   nil,   nil,    38,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    59,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   130,   132,   nil,   131,    25,   127,    41,   nil,
    41,   nil,   nil,    41,   nil,   nil,    38,   nil,    38,   nil,
   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   154,   nil,   156,   157,   nil,   nil,   159,   nil,    41,   nil,
    41,    41,   nil,   nil,    41,    41,    38,   nil,    38,    38,
   nil,   nil,    38,    38,    59,   nil,   nil,   nil,   nil,    59,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   172,    41,
   nil,    41,    41,   173,    41,   nil,    41,    38,   nil,    38,
    38,    41,    38,   nil,    38,   nil,   182,    41,    41,    38,
   185,    59,   nil,   nil,    41,    38,    38,    41,    41,   nil,
    41,   nil,    38,   nil,    68,    38,    38,   nil,    38,    88,
   nil,    90,    91,   nil,   nil,    59,   nil,    59,    59,   nil,
    59,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    59,    59,   nil,   115,   116,   117,   nil,
   nil,   nil,   nil,    59,   118,   119,    59,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   148,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   152,   nil,   155,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   163,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   174,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   181 ]

racc_goto_check = [
     5,     7,    11,     2,     8,     6,     3,     2,     3,    23,
    23,     1,     9,     5,    10,     5,    11,    12,    13,    24,
     5,    21,    25,     5,    27,   nil,   nil,   nil,   nil,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,     5,   nil,     6,
   nil,     5,     8,     6,   nil,   nil,   nil,     5,   nil,   nil,
   nil,     5,   nil,   nil,   nil,    21,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     6,     7,   nil,     8,     8,     5,     5,   nil,
     5,   nil,   nil,     5,   nil,   nil,    21,   nil,    21,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     6,   nil,     6,     6,   nil,   nil,     6,   nil,     5,   nil,
     5,     5,   nil,   nil,     5,     5,    21,   nil,    21,    21,
   nil,   nil,    21,    21,    14,   nil,   nil,   nil,   nil,    14,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,     5,
   nil,     5,     5,     6,     5,   nil,     5,    21,   nil,    21,
    21,     5,    21,   nil,    21,   nil,     6,     5,     5,    21,
     6,    14,   nil,   nil,     5,    21,    21,     5,     5,   nil,
     5,   nil,    21,   nil,    22,    21,    21,   nil,    21,    22,
   nil,    22,    22,   nil,   nil,    14,   nil,    14,    14,   nil,
    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    14,    14,   nil,    22,    22,    22,   nil,
   nil,   nil,   nil,    14,    22,    22,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,    22,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    22,    22,    22,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22 ]

racc_goto_pointer = [
   nil,    11,     3,     6,   nil,    -5,   -13,   -14,   -11,     6,
     1,   -11,    -3,    -2,    41,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   144,   -34,  -103,  -132,   nil,   -57,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,    71,   nil,   nil,    20,    37,
   nil,   nil,   nil,    30,    29,    31,    32,    33,    34,    35,
    36,    70,    84,   nil,    85,   nil,    69,   nil,    75,    76 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 53, :_reduce_1,
  1, 53, :_reduce_2,
  2, 54, :_reduce_3,
  1, 54, :_reduce_4,
  8, 56, :_reduce_5,
  9, 56, :_reduce_6,
  10, 56, :_reduce_7,
  11, 56, :_reduce_8,
  4, 59, :_reduce_9,
  2, 59, :_reduce_10,
  4, 55, :_reduce_11,
  7, 61, :_reduce_12,
  5, 61, :_reduce_13,
  1, 62, :_reduce_14,
  3, 62, :_reduce_15,
  2, 63, :_reduce_16,
  2, 63, :_reduce_17,
  1, 64, :_reduce_18,
  3, 64, :_reduce_19,
  2, 58, :_reduce_20,
  1, 58, :_reduce_21,
  2, 66, :_reduce_22,
  2, 66, :_reduce_23,
  2, 66, :_reduce_24,
  2, 66, :_reduce_25,
  2, 66, :_reduce_26,
  2, 66, :_reduce_27,
  2, 66, :_reduce_28,
  1, 66, :_reduce_29,
  2, 66, :_reduce_30,
  1, 66, :_reduce_31,
  2, 72, :_reduce_32,
  3, 65, :_reduce_33,
  2, 67, :_reduce_34,
  2, 68, :_reduce_35,
  2, 68, :_reduce_36,
  1, 75, :_reduce_37,
  1, 75, :_reduce_38,
  3, 75, :_reduce_39,
  3, 75, :_reduce_40,
  1, 76, :_reduce_41,
  5, 69, :_reduce_42,
  1, 77, :_reduce_43,
  3, 77, :_reduce_44,
  11, 70, :_reduce_45,
  9, 70, :_reduce_46,
  5, 70, :_reduce_47,
  5, 71, :_reduce_48,
  1, 74, :_reduce_49,
  1, 74, :_reduce_50,
  1, 74, :_reduce_51,
  3, 74, :_reduce_52,
  2, 74, :_reduce_53,
  2, 74, :_reduce_54,
  3, 74, :_reduce_55,
  3, 74, :_reduce_56,
  3, 74, :_reduce_57,
  3, 74, :_reduce_58,
  3, 74, :_reduce_59,
  3, 74, :_reduce_60,
  3, 74, :_reduce_61,
  3, 74, :_reduce_62,
  3, 74, :_reduce_63,
  3, 74, :_reduce_64,
  3, 74, :_reduce_65,
  3, 74, :_reduce_66,
  3, 74, :_reduce_67,
  3, 74, :_reduce_68,
  3, 74, :_reduce_69,
  3, 73, :_reduce_70,
  4, 73, :_reduce_71,
  1, 79, :_reduce_72,
  3, 79, :_reduce_73,
  1, 60, :_reduce_74,
  1, 60, :_reduce_75,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 80, :_reduce_78,
  1, 81, :_reduce_79,
  1, 81, :_reduce_80,
  1, 57, :_reduce_81 ]

racc_reduce_n = 82

racc_shift_n = 187

racc_token_table = {
  false => 0,
  :error => 1,
  "TkString" => 2,
  "TkNum" => 3,
  "TkId" => 4,
  "not" => 5,
  :UMINUS => 6,
  "*" => 7,
  "/" => 8,
  "%" => 9,
  "div" => 10,
  "mod" => 11,
  "+" => 12,
  "-" => 13,
  "==" => 14,
  "/=" => 15,
  ">=" => 16,
  "<=" => 17,
  ">" => 18,
  "<" => 19,
  "and" => 20,
  "or" => 21,
  "func" => 22,
  "(" => 23,
  ")" => 24,
  "begin" => 25,
  "end" => 26,
  ";" => 27,
  "->" => 28,
  "," => 29,
  "program" => 30,
  "with" => 31,
  "do" => 32,
  "return" => 33,
  "=" => 34,
  "read" => 35,
  "write" => 36,
  "writeln" => 37,
  "if" => 38,
  "then" => 39,
  "else" => 40,
  "for" => 41,
  "from" => 42,
  "to" => 43,
  "by" => 44,
  "repeat" => 45,
  "times" => 46,
  "while" => 47,
  "number" => 48,
  "boolean" => 49,
  "true" => 50,
  "false" => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"TkString\"",
  "\"TkNum\"",
  "\"TkId\"",
  "\"not\"",
  "UMINUS",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"div\"",
  "\"mod\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"and\"",
  "\"or\"",
  "\"func\"",
  "\"(\"",
  "\")\"",
  "\"begin\"",
  "\"end\"",
  "\";\"",
  "\"->\"",
  "\",\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"return\"",
  "\"=\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"times\"",
  "\"while\"",
  "\"number\"",
  "\"boolean\"",
  "\"true\"",
  "\"false\"",
  "$start",
  "ESTRUCTURA",
  "FUNCIONES",
  "PROGRAMA",
  "FUNCION",
  "IDENTIFICADOR",
  "INSTRUCCIONES",
  "PARAMETROS",
  "TIPO",
  "BLOQUE",
  "LISTA_DECLARACION",
  "DECLARACION",
  "LISTA_IDENTIFICADOR",
  "ASIGNACION",
  "INSTRUCCION",
  "ENTRADA",
  "SALIDA",
  "CONDICIONAL",
  "REPETICION_D",
  "REPETICION_I",
  "RETURN",
  "LLAMADA_FUNCION",
  "EXPRESION",
  "ESCRIBIR",
  "STRING",
  "COND",
  "LITERAL",
  "LISTA_PASE_PARAMETROS",
  "LITERAL_NUMBER",
  "LITERAL_BOOLEAN" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_1(val, _values, result)
     return Estructura.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_2(val, _values, result)
     return Estructura.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_3(val, _values, result)
     result = ListaFunciones.new(val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[1], nil, nil, val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[1], val[3], nil, val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1], nil, val[5], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_8(val, _values, result)
     result = Funcion.new(val[1], val[3], val[6], val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_9(val, _values, result)
     result = Parametros.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_10(val, _values, result)
     result = Parametros.new(val[0],val[1],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_11(val, _values, result)
     result = Programa.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_12(val, _values, result)
     result = Bloque.new(val[1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_13(val, _values, result)
     result = Bloque.new(nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_14(val, _values, result)
     result = ListaDeclaracion.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 73)
  def _reduce_15(val, _values, result)
     result = ListaDeclaracion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_16(val, _values, result)
     result = Declaracion.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_17(val, _values, result)
     result = Declaracion.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_18(val, _values, result)
     result = ListaId.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_19(val, _values, result)
     result = ListaId.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_20(val, _values, result)
     result = Instrucciones.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_21(val, _values, result)
     result = Instrucciones.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_30(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_32(val, _values, result)
     result = Return.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_33(val, _values, result)
     result = Asignacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_34(val, _values, result)
     result = Entrada.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_35(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_36(val, _values, result)
     result = Salida.new(val[1], "SALTO") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_37(val, _values, result)
     result = Escribir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_38(val, _values, result)
     result = Escribir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 133)
  def _reduce_39(val, _values, result)
     result = Escribir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_40(val, _values, result)
     result = Escribir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_41(val, _values, result)
     result = Str.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_42(val, _values, result)
     result = Condicional.new(val[1],val[3],val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 147)
  def _reduce_43(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_44(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_45(val, _values, result)
     result = For.new(val[1], val[3], val[5], val[7], val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_46(val, _values, result)
     result = For.new(val[1], val[3], val[5], nil, val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_47(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_48(val, _values, result)
     result = RepeticionI.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_49(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_50(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_51(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_52(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 169)
  def _reduce_53(val, _values, result)
     result = OpNot.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_54(val, _values, result)
     result = OpUMINUS.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_55(val, _values, result)
     result = OpMultiplicacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_56(val, _values, result)
     result = OpDivisionE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_57(val, _values, result)
     result = OpModE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_58(val, _values, result)
     result = OpDivision.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_59(val, _values, result)
     result = OpMod.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_60(val, _values, result)
     result = OpSuma.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 177)
  def _reduce_61(val, _values, result)
     result = OpResta.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 178)
  def _reduce_62(val, _values, result)
     result = OpEquivalente.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 179)
  def _reduce_63(val, _values, result)
     result = OpDesigual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 180)
  def _reduce_64(val, _values, result)
     result = OpMayorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_65(val, _values, result)
     result = OpMenorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 182)
  def _reduce_66(val, _values, result)
     result = OpMayor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 183)
  def _reduce_67(val, _values, result)
     result = OpMenor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_68(val, _values, result)
     result = OpAnd.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_69(val, _values, result)
     result = OpOr.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 190)
  def _reduce_70(val, _values, result)
     result = LlamadaFuncion.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 191)
  def _reduce_71(val, _values, result)
     result = LlamadaFuncion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 195)
  def _reduce_72(val, _values, result)
     result = ListaPaseParametros.new(nil,val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 196)
  def _reduce_73(val, _values, result)
     result = ListaPaseParametros.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_74(val, _values, result)
     result = TipoNum.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 202)
  def _reduce_75(val, _values, result)
     result = TipoBoolean.new() 
    result
  end
.,.,

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.y', 213)
  def _reduce_78(val, _values, result)
     result = LiteralNumerico.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 218)
  def _reduce_79(val, _values, result)
     result = LiteralBooleano.new("true") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 219)
  def _reduce_80(val, _values, result)
     result = LiteralBooleano.new("false") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 222)
  def _reduce_81(val, _values, result)
     result =  Identificador.new(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ParserRtn
