#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lexer'
require_relative 'clasesParser'

class ErrorSintactico < RuntimeError

	def initialize(token)
		@token = token
	end

	def to_s
		"fila: " + @token.fila.to_s() + ", columna: " + @token.columna.to_s() + ", token inesperado: #{@token.token} \n"   
	end
end

class ParserRtn < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 249)
	
	def initialize(tokens)
		@tokens = tokens
		@yydebug = true
		super()
	end 

	def parse
		do_parse
	end

	def next_token
		@tokens.shift
	end

	def on_error(id, token, pila)
		raise ErrorSintactico.new(token)
	end
	
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     6,     6,    50,    56,    38,    39,    40,    12,    13,    41,
    18,    19,    44,    42,    45,    77,    90,    43,     7,    78,
    10,    36,   125,    38,    39,    40,    12,    13,    41,    14,
   163,    44,    42,    12,    13,    15,    43,    51,   164,    46,
    36,    91,   149,    18,    19,   148,     5,     5,    37,    20,
   130,    38,    39,    40,    12,    13,    41,    18,    19,    44,
    42,    18,    19,    47,    43,    95,    96,    37,    36,   158,
    38,    39,    40,    12,    13,    41,    18,    19,    44,    42,
    18,    19,    48,    43,    49,    52,    55,    36,   166,    38,
    39,    40,    12,    13,    41,    37,    58,    44,    42,    59,
    60,    61,    43,    62,    63,    64,    36,   167,    38,    39,
    40,    12,    13,    41,    37,    79,    44,    42,    85,    92,
    77,    43,    97,    78,   120,    36,   168,    38,    39,    40,
    12,    13,    41,    37,   120,    44,    42,   122,   126,   131,
    43,   156,   159,   160,    36,   174,    38,    39,    40,    12,
    13,    41,    37,   169,    44,    42,   173,   175,   178,    43,
   nil,   nil,   nil,    36,   182,    38,    39,    40,    12,    13,
    41,    37,   nil,    44,    42,   nil,   nil,   nil,    43,   nil,
   nil,   nil,    36,   184,    38,    39,    40,    12,    13,    41,
    37,   nil,    44,    42,   nil,   nil,   nil,    43,   nil,   nil,
   nil,    36,    38,    39,    40,    12,    13,    41,   nil,    37,
    44,    42,   nil,   nil,   nil,    43,   nil,   nil,   nil,    36,
   nil,    38,    39,    40,    12,    13,    41,   nil,    37,    44,
    42,   nil,   nil,   nil,    43,   nil,   nil,   nil,    36,    38,
    39,    40,    12,    13,    41,   nil,    37,    44,    42,   nil,
   nil,   nil,    43,   nil,   nil,   nil,    36,   nil,    38,    39,
    40,    12,    13,    41,   nil,    37,    44,    42,   nil,   nil,
   nil,    43,   nil,   nil,   nil,    36,    38,    39,    40,    12,
    13,    41,   nil,    37,    44,    42,   nil,   nil,   nil,    43,
   nil,   nil,   nil,    36,   nil,    38,    39,    40,    12,    13,
    41,   nil,    37,    44,    42,   nil,   nil,   nil,    43,   nil,
   nil,   nil,    36,    38,    39,    40,    12,    13,    41,   nil,
    37,    44,    42,   nil,   nil,   nil,    43,   nil,   nil,   nil,
    36,   nil,    38,    39,    40,    12,    13,    41,   nil,    37,
    44,    42,   nil,   nil,   nil,    43,   nil,   nil,   nil,    36,
    38,    39,    40,    12,    13,    41,   nil,    37,    44,    42,
   nil,   nil,   nil,    43,   nil,   nil,   nil,    36,   nil,    38,
    39,    40,    12,    13,    41,   nil,    37,    44,    42,   nil,
   nil,   nil,    43,   nil,   nil,   nil,    36,    38,    39,    40,
    12,    13,    41,   nil,    37,    44,    42,   nil,   nil,   nil,
    43,   nil,   nil,   nil,    36,   nil,    38,    39,    40,    12,
    13,    41,   nil,    37,    44,    42,   124,   nil,   nil,    43,
   nil,   nil,   nil,    36,    98,    99,   100,   101,   102,   nil,
   nil,    37,   nil,   nil,   nil,   111,   112,   105,   106,   107,
   108,   109,   110,   103,   104,    98,    99,   100,   101,   102,
    37,   177,    98,    99,   100,   101,   102,   nil,   nil,   176,
   nil,   nil,   nil,   nil,   nil,   nil,   181,   nil,   nil,   nil,
   111,   112,   105,   106,   107,   108,   109,   110,   103,   104,
    98,    99,   100,   101,   102,   111,   112,   105,   106,   107,
   108,   109,   110,   103,   104,    98,    99,   100,   101,   102,
   121,   111,   112,   105,   106,   107,   108,   109,   110,   103,
   104,    98,    99,   100,   101,   102,   nil,   111,   112,   105,
   106,   107,   108,   109,   110,   103,   104,    98,    99,   100,
   101,   102,    75,    76,    70,    75,    76,    70,   nil,   nil,
    75,    76,    70,   nil,    71,   nil,   nil,    71,   nil,   nil,
   nil,   nil,    71,   nil,    69,   nil,    68,    69,    74,    68,
    82,    74,    69,   nil,    68,    82,    74,    75,    76,    70,
    75,    76,    70,    75,    76,    70,    75,    76,    70,    71,
   nil,   nil,    71,   nil,   nil,    71,   nil,   nil,    71,    69,
   nil,    68,    69,    74,    68,    69,    74,    68,    69,    74,
    68,   nil,    74,    75,    76,    70,    75,    76,    70,    75,
    76,    70,   nil,   nil,   nil,    71,   nil,   nil,    71,   nil,
   nil,    71,    75,    76,    70,    69,   nil,    68,    69,    74,
    68,    69,    74,    68,    71,    74,   nil,    75,    76,    70,
    75,    76,    70,   nil,    69,   118,    68,   nil,    74,    71,
   nil,   nil,    71,    75,    76,    70,    75,    76,    70,    69,
   nil,    68,    69,    74,    68,    71,    74,   nil,    71,    75,
    76,    70,    75,    76,    70,    69,   nil,    68,    69,    74,
    68,    71,    74,   nil,    71,    75,    76,    70,    75,    76,
    70,    69,   nil,    68,    69,    74,    68,    71,    74,   nil,
    71,    75,    76,    70,    75,    76,    70,    69,   nil,    68,
    69,    74,    68,    71,    74,   nil,    71,    75,    76,    70,
    75,    76,    70,    69,   nil,    68,    69,    74,    68,    71,
    74,   nil,    71,    75,    76,    70,    75,    76,    70,    69,
   nil,    68,    69,    74,    68,    71,    74,   nil,    71,    75,
    76,    70,    75,    76,    70,    69,   nil,    68,    69,    74,
    68,    71,    74,   nil,    71,   nil,   nil,    75,    76,    70,
   nil,    69,   nil,    68,    69,    74,    68,   151,    74,    71,
    75,    76,    70,   nil,   nil,   nil,   nil,   nil,   nil,    69,
   nil,    68,    71,    74,   nil,   165,   nil,   nil,   nil,   nil,
   nil,   nil,    69,   nil,    68,   nil,    74,   111,   112,   105,
   106,   107,   108,   109,   110,   103,   104,    98,    99,   100,
   101,   102,    75,    76,    70,    75,    76,    70,   nil,   nil,
   nil,   nil,   nil,   nil,    71,   nil,   nil,    71,   nil,   nil,
   nil,   nil,   nil,   123,    69,   nil,    68,    69,    74,    68,
   nil,    74,   111,   112,   105,   106,   107,   108,   109,   110,
   103,   104,    98,    99,   100,   101,   102,   111,   112,   105,
   106,   107,   108,   109,   110,   103,   104,    98,    99,   100,
   101,   102,   nil,   nil,   nil,   nil,   nil,   147,   111,   112,
   105,   106,   107,   108,   109,   110,   103,   104,    98,    99,
   100,   101,   102,   111,   112,   105,   106,   107,   108,   109,
   110,   103,   104,    98,    99,   100,   101,   102,   111,   112,
   105,   106,   107,   108,   109,   110,   103,   104,    98,    99,
   100,   101,   102,   111,   nil,   105,   106,   107,   108,   109,
   110,   103,   104,    98,    99,   100,   101,   102,   111,   112,
   105,   106,   107,   108,   109,   110,   103,   104,    98,    99,
   100,   101,   102,   111,   112,   105,   106,   107,   108,   109,
   110,   103,   104,    98,    99,   100,   101,   102,   -80,   -80,
   -80,   -80,   -80,   -80,   103,   104,    98,    99,   100,   101,
   102,   -80,   -80,   -80,   -80,   -80,   -80,   103,   104,    98,
    99,   100,   101,   102,   -80,   -80,   -80,   -80,   -80,   -80,
   103,   104,    98,    99,   100,   101,   102,   -80,   -80,   -80,
   -80,   -80,   -80,   103,   104,    98,    99,   100,   101,   102,
   -80,   -80,   -80,   -80,   -80,   -80,   103,   104,    98,    99,
   100,   101,   102,   -80,   -80,   -80,   -80,   -80,   -80,   103,
   104,    98,    99,   100,   101,   102,   105,   106,   107,   108,
   109,   110,   103,   104,    98,    99,   100,   101,   102 ]

racc_action_check = [
     0,     2,    21,    24,    24,    24,    24,    24,    24,    24,
    10,    10,    24,    24,    15,    37,    47,    24,     1,    37,
     5,    24,    88,    88,    88,    88,    88,    88,    88,     7,
   152,    88,    88,     6,     6,    10,    88,    21,   152,    15,
    88,    47,   119,    12,    12,   119,     0,     2,    24,    11,
    93,    93,    93,    93,    93,    93,    93,    46,    46,    93,
    93,    51,    51,    16,    93,    53,    53,    88,    93,   127,
   127,   127,   127,   127,   127,   127,    91,    91,   127,   127,
    92,    92,    17,   127,    20,    22,    23,   127,   154,   154,
   154,   154,   154,   154,   154,    93,    27,   154,   154,    28,
    29,    30,   154,    31,    32,    33,   154,   155,   155,   155,
   155,   155,   155,   155,   127,    38,   155,   155,    42,    48,
    55,   155,    56,    68,    80,   155,   157,   157,   157,   157,
   157,   157,   157,   154,    83,   157,   157,    85,    89,    96,
   157,   125,   128,   130,   157,   170,   170,   170,   170,   170,
   170,   170,   155,   158,   170,   170,   168,   171,   174,   170,
   nil,   nil,   nil,   170,   180,   180,   180,   180,   180,   180,
   180,   157,   nil,   180,   180,   nil,   nil,   nil,   180,   nil,
   nil,   nil,   180,   183,   183,   183,   183,   183,   183,   183,
   170,   nil,   183,   183,   nil,   nil,   nil,   183,   nil,   nil,
   nil,   183,    13,    13,    13,    13,    13,    13,   nil,   180,
    13,    13,   nil,   nil,   nil,    13,   nil,   nil,   nil,    13,
   nil,    45,    45,    45,    45,    45,    45,   nil,   183,    45,
    45,   nil,   nil,   nil,    45,   nil,   nil,   nil,    45,    50,
    50,    50,    50,    50,    50,   nil,    13,    50,    50,   nil,
   nil,   nil,    50,   nil,   nil,   nil,    50,   nil,    90,    90,
    90,    90,    90,    90,   nil,    45,    90,    90,   nil,   nil,
   nil,    90,   nil,   nil,   nil,    90,   121,   121,   121,   121,
   121,   121,   nil,    50,   121,   121,   nil,   nil,   nil,   121,
   nil,   nil,   nil,   121,   nil,   123,   123,   123,   123,   123,
   123,   nil,    90,   123,   123,   nil,   nil,   nil,   123,   nil,
   nil,   nil,   123,   124,   124,   124,   124,   124,   124,   nil,
   121,   124,   124,   nil,   nil,   nil,   124,   nil,   nil,   nil,
   124,   nil,   126,   126,   126,   126,   126,   126,   nil,   123,
   126,   126,   nil,   nil,   nil,   126,   nil,   nil,   nil,   126,
   159,   159,   159,   159,   159,   159,   nil,   124,   159,   159,
   nil,   nil,   nil,   159,   nil,   nil,   nil,   159,   nil,   164,
   164,   164,   164,   164,   164,   nil,   126,   164,   164,   nil,
   nil,   nil,   164,   nil,   nil,   nil,   164,   177,   177,   177,
   177,   177,   177,   nil,   159,   177,   177,   nil,   nil,   nil,
   177,   nil,   nil,   nil,   177,   nil,   181,   181,   181,   181,
   181,   181,   nil,   164,   181,   181,    87,   nil,   nil,   181,
   nil,   nil,   nil,   181,   137,   137,   137,   137,   137,   nil,
   nil,   177,   nil,   nil,   nil,    87,    87,    87,    87,    87,
    87,    87,    87,    87,    87,    87,    87,    87,    87,    87,
   181,   172,   138,   138,   138,   138,   138,   nil,   nil,   172,
   nil,   nil,   nil,   nil,   nil,   nil,   179,   nil,   nil,   nil,
   172,   172,   172,   172,   172,   172,   172,   172,   172,   172,
   172,   172,   172,   172,   172,   179,   179,   179,   179,   179,
   179,   179,   179,   179,   179,   179,   179,   179,   179,   179,
    84,    65,    65,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    65,    65,    65,    65,   nil,    84,    84,    84,
    84,    84,    84,    84,    84,    84,    84,    84,    84,    84,
    84,    84,    36,    36,    36,    39,    39,    39,   nil,   nil,
    40,    40,    40,   nil,    36,   nil,   nil,    39,   nil,   nil,
   nil,   nil,    40,   nil,    36,   nil,    36,    39,    36,    39,
    39,    39,    40,   nil,    40,    40,    40,    41,    41,    41,
    43,    43,    43,    44,    44,    44,    69,    69,    69,    41,
   nil,   nil,    43,   nil,   nil,    44,   nil,   nil,    69,    41,
   nil,    41,    43,    41,    43,    44,    43,    44,    69,    44,
    69,   nil,    69,    70,    70,    70,    71,    71,    71,    77,
    77,    77,   nil,   nil,   nil,    70,   nil,   nil,    71,   nil,
   nil,    77,    78,    78,    78,    70,   nil,    70,    71,    70,
    71,    77,    71,    77,    78,    77,   nil,    98,    98,    98,
    99,    99,    99,   nil,    78,    78,    78,   nil,    78,    98,
   nil,   nil,    99,   100,   100,   100,   101,   101,   101,    98,
   nil,    98,    99,    98,    99,   100,    99,   nil,   101,   102,
   102,   102,   103,   103,   103,   100,   nil,   100,   101,   100,
   101,   102,   101,   nil,   103,   104,   104,   104,   105,   105,
   105,   102,   nil,   102,   103,   102,   103,   104,   103,   nil,
   105,   106,   106,   106,   107,   107,   107,   104,   nil,   104,
   105,   104,   105,   106,   105,   nil,   107,   108,   108,   108,
   109,   109,   109,   106,   nil,   106,   107,   106,   107,   108,
   107,   nil,   109,   110,   110,   110,   111,   111,   111,   108,
   nil,   108,   109,   108,   109,   110,   109,   nil,   111,   112,
   112,   112,   120,   120,   120,   110,   nil,   110,   111,   110,
   111,   112,   111,   nil,   120,   nil,   nil,   122,   122,   122,
   nil,   112,   nil,   112,   120,   112,   120,   120,   120,   122,
   149,   149,   149,   nil,   nil,   nil,   nil,   nil,   nil,   122,
   nil,   122,   149,   122,   nil,   153,   nil,   nil,   nil,   nil,
   nil,   nil,   149,   nil,   149,   nil,   149,   153,   153,   153,
   153,   153,   153,   153,   153,   153,   153,   153,   153,   153,
   153,   153,   165,   165,   165,   176,   176,   176,   nil,   nil,
   nil,   nil,   nil,   nil,   165,   nil,   nil,   176,   nil,   nil,
   nil,   nil,   nil,    86,   165,   nil,   165,   176,   165,   176,
   nil,   176,    86,    86,    86,    86,    86,    86,    86,    86,
    86,    86,    86,    86,    86,    86,    86,   113,   113,   113,
   113,   113,   113,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   nil,   nil,   nil,   nil,   nil,   113,    81,    81,
    81,    81,    81,    81,    81,    81,    81,    81,    81,    81,
    81,    81,    81,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   116,   116,   116,   116,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   117,
   117,   117,   117,   146,   nil,   146,   146,   146,   146,   146,
   146,   146,   146,   146,   146,   146,   146,   146,   150,   150,
   150,   150,   150,   150,   150,   150,   150,   150,   150,   150,
   150,   150,   150,   161,   161,   161,   161,   161,   161,   161,
   161,   161,   161,   161,   161,   161,   161,   161,   139,   139,
   139,   139,   139,   139,   139,   139,   139,   139,   139,   139,
   139,   140,   140,   140,   140,   140,   140,   140,   140,   140,
   140,   140,   140,   140,   141,   141,   141,   141,   141,   141,
   141,   141,   141,   141,   141,   141,   141,   142,   142,   142,
   142,   142,   142,   142,   142,   142,   142,   142,   142,   142,
   143,   143,   143,   143,   143,   143,   143,   143,   143,   143,
   143,   143,   143,   144,   144,   144,   144,   144,   144,   144,
   144,   144,   144,   144,   144,   144,   145,   145,   145,   145,
   145,   145,   145,   145,   145,   145,   145,   145,   145 ]

racc_action_pointer = [
    -2,    18,    -1,   nil,   nil,   -26,    26,    29,   nil,   nil,
   -12,    46,    21,   198,   nil,    -6,    16,    34,   nil,   nil,
    41,    -6,    42,    38,     0,   nil,   nil,    53,    56,    57,
    58,    60,    61,    62,   nil,   nil,   508,   -27,    67,   511,
   516,   543,    70,   546,   549,   217,    35,    -4,    75,   nil,
   235,    39,   nil,    22,   nil,    78,    79,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   474,   nil,   nil,    77,   552,
   579,   582,   nil,   nil,   nil,   nil,   nil,   585,   598,   nil,
    80,   861,   nil,    90,   490,   123,   825,   408,    19,   118,
   254,    54,    58,    47,   nil,   nil,    91,   nil,   613,   616,
   629,   632,   645,   648,   661,   664,   677,   680,   693,   696,
   709,   712,   725,   840,   nil,   nil,   876,   891,   nil,    -2,
   728,   272,   743,   291,   309,    98,   328,    66,   122,   nil,
   100,   nil,   nil,   nil,   nil,   nil,   nil,   387,   415,   949,
   962,   975,   988,  1001,  1014,  1027,   906,   nil,   nil,   756,
   921,   nil,    27,   780,    85,   104,   nil,   123,   110,   346,
   nil,   936,   nil,   nil,   365,   798,   nil,   nil,   113,   nil,
   142,   154,   443,   nil,   115,   nil,   801,   383,   nil,   458,
   161,   402,   nil,   180,   nil ]

racc_action_default = [
   -80,   -80,   -80,    -2,    -4,   -80,   -80,   -80,    -1,    -3,
   -80,   -80,   -80,   -80,   185,   -80,   -80,   -80,   -73,   -74,
   -80,   -80,   -80,   -80,   -80,   -20,   -21,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -30,   -31,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -10,   -11,
   -80,   -80,   -15,   -80,   -17,   -18,   -80,   -22,   -23,   -24,
   -25,   -26,   -27,   -28,   -29,   -32,   -48,   -49,   -50,   -80,
   -80,   -80,   -75,   -76,   -77,   -78,   -79,   -80,   -80,   -34,
   -35,   -37,   -38,   -36,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -14,   -16,   -80,   -13,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -52,   -53,   -33,   -72,   -69,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,    -9,
   -80,   -19,   -54,   -55,   -56,   -57,   -58,   -59,   -60,   -61,
   -62,   -63,   -64,   -65,   -66,   -67,   -68,   -51,   -70,   -80,
   -39,   -40,   -80,   -80,   -80,   -80,    -5,   -80,   -80,   -80,
   -12,   -71,   -41,   -42,   -80,   -80,   -46,   -47,   -80,    -6,
   -80,   -80,   -80,    -7,   -80,   -43,   -80,   -80,    -8,   -80,
   -80,   -80,   -45,   -80,   -44 ]

racc_goto_table = [
    35,    16,    23,    57,    22,     1,     3,    24,     8,     2,
     4,    35,     9,    80,    83,    11,    21,    53,    54,   162,
   119,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    35,   nil,   nil,   nil,    89,    35,   nil,    88,
   nil,    23,   nil,    94,    93,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,
   nil,   nil,    57,   nil,   nil,    35,   nil,    35,   nil,   nil,
    35,   128,   nil,   129,   127,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   152,   nil,   nil,   nil,   nil,   nil,    57,   nil,    35,   nil,
    35,    35,   nil,    35,    35,   nil,   nil,   154,   155,   nil,
   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,    57,   nil,    57,   nil,   nil,   nil,
   nil,    35,    35,   171,    35,   nil,    35,    65,   nil,    57,
   nil,    35,    84,   170,    86,    87,   nil,    35,   nil,    57,
   nil,   nil,    57,   nil,    35,   nil,   nil,    35,    35,   nil,
    35,   180,   nil,   nil,   nil,   183,   nil,   nil,   nil,   nil,
   113,   114,   115,   nil,   nil,   nil,   nil,   nil,   116,   117,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   150,   nil,   153,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   161,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   179 ]

racc_goto_check = [
    21,     6,     7,    14,    10,     1,     3,     5,     3,     2,
     4,    21,     4,    23,    23,     8,     9,    11,    12,    24,
    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,     7,    21,   nil,     5,
   nil,     7,   nil,    10,     5,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,   nil,   nil,
   nil,   nil,    14,   nil,   nil,    21,   nil,    21,   nil,   nil,
    21,     7,   nil,     6,     5,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    14,   nil,   nil,   nil,   nil,   nil,    14,   nil,    21,   nil,
    21,    21,   nil,    21,    21,   nil,   nil,     5,     5,   nil,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    14,    14,   nil,    14,   nil,   nil,   nil,
   nil,    21,    21,    14,    21,   nil,    21,    22,   nil,    14,
   nil,    21,    22,     5,    22,    22,   nil,    21,   nil,    14,
   nil,   nil,    14,   nil,    21,   nil,   nil,    21,    21,   nil,
    21,     5,   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,
    22,    22,    22,   nil,   nil,   nil,   nil,   nil,    22,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,
    22,    22,    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22 ]

racc_goto_pointer = [
   nil,     5,     9,     6,    10,    -6,    -9,   -10,     9,     4,
    -8,    -6,    -5,   nil,   -21,   nil,   nil,   nil,   nil,   nil,
   nil,   -13,   111,   -26,  -133,   nil,   -58,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,    34,   nil,
   nil,   nil,    27,    25,    26,    28,    29,    30,    31,    32,
    33,    67,    81,   nil,   nil,    66,   nil,    72,    73 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 53, :_reduce_1,
  1, 53, :_reduce_2,
  2, 54, :_reduce_3,
  1, 54, :_reduce_4,
  7, 56, :_reduce_5,
  8, 56, :_reduce_6,
  9, 56, :_reduce_7,
  10, 56, :_reduce_8,
  4, 58, :_reduce_9,
  2, 58, :_reduce_10,
  4, 55, :_reduce_11,
  6, 60, :_reduce_12,
  4, 60, :_reduce_13,
  3, 61, :_reduce_14,
  2, 61, :_reduce_15,
  3, 62, :_reduce_16,
  2, 62, :_reduce_17,
  1, 63, :_reduce_18,
  3, 63, :_reduce_19,
  1, 57, :_reduce_20,
  1, 57, :_reduce_21,
  2, 65, :_reduce_22,
  2, 66, :_reduce_23,
  2, 66, :_reduce_24,
  2, 66, :_reduce_25,
  2, 66, :_reduce_26,
  2, 66, :_reduce_27,
  2, 66, :_reduce_28,
  2, 66, :_reduce_29,
  1, 66, :_reduce_30,
  1, 66, :_reduce_none,
  2, 72, :_reduce_32,
  3, 64, :_reduce_33,
  2, 67, :_reduce_34,
  2, 68, :_reduce_35,
  2, 68, :_reduce_36,
  1, 75, :_reduce_37,
  1, 75, :_reduce_38,
  3, 75, :_reduce_39,
  3, 75, :_reduce_40,
  5, 69, :_reduce_41,
  1, 76, :_reduce_42,
  3, 76, :_reduce_43,
  11, 70, :_reduce_44,
  9, 70, :_reduce_45,
  5, 70, :_reduce_46,
  5, 71, :_reduce_47,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_50,
  3, 74, :_reduce_51,
  2, 74, :_reduce_52,
  2, 74, :_reduce_53,
  3, 74, :_reduce_54,
  3, 74, :_reduce_55,
  3, 74, :_reduce_56,
  3, 74, :_reduce_57,
  3, 74, :_reduce_58,
  3, 74, :_reduce_59,
  3, 74, :_reduce_60,
  3, 74, :_reduce_61,
  3, 74, :_reduce_62,
  3, 74, :_reduce_63,
  3, 74, :_reduce_64,
  3, 74, :_reduce_65,
  3, 74, :_reduce_66,
  3, 74, :_reduce_67,
  3, 74, :_reduce_68,
  3, 73, :_reduce_69,
  4, 73, :_reduce_70,
  3, 78, :_reduce_71,
  1, 78, :_reduce_72,
  1, 59, :_reduce_73,
  1, 59, :_reduce_74,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 79, :_reduce_77,
  1, 80, :_reduce_78,
  1, 80, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 185

racc_token_table = {
  false => 0,
  :error => 1,
  "program" => 2,
  "end" => 3,
  "read" => 4,
  "write" => 5,
  "writeln" => 6,
  "with" => 7,
  "do" => 8,
  "if" => 9,
  "then" => 10,
  "else" => 11,
  "while" => 12,
  "for" => 13,
  "from" => 14,
  "to" => 15,
  "by" => 16,
  "repeat" => 17,
  "times" => 18,
  "func" => 19,
  "begin" => 20,
  "return" => 21,
  "number" => 22,
  "boolean" => 23,
  "true" => 24,
  "false" => 25,
  "not" => 26,
  "and" => 27,
  "or" => 28,
  "==" => 29,
  "/=" => 30,
  ">=" => 31,
  "<=" => 32,
  ">" => 33,
  "<" => 34,
  "+" => 35,
  "-" => 36,
  "*" => 37,
  "/" => 38,
  "%" => 39,
  "div" => 40,
  "mod" => 41,
  "=" => 42,
  ";" => 43,
  "," => 44,
  "->" => 45,
  "(" => 46,
  ")" => 47,
  :ID => 48,
  :STRING => 49,
  :NUMBER => 50,
  :UMINUS => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"program\"",
  "\"end\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"with\"",
  "\"do\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"number\"",
  "\"boolean\"",
  "\"true\"",
  "\"false\"",
  "\"not\"",
  "\"and\"",
  "\"or\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"div\"",
  "\"mod\"",
  "\"=\"",
  "\";\"",
  "\",\"",
  "\"->\"",
  "\"(\"",
  "\")\"",
  "ID",
  "STRING",
  "NUMBER",
  "UMINUS",
  "$start",
  "ESTRUCTURA",
  "FUNCIONES",
  "PROGRAMA",
  "FUNCION",
  "INSTRUCCIONES",
  "PARAMETROS",
  "TIPO",
  "BLOQUE",
  "LISTA_DECLARACION",
  "DECLARACION",
  "LISTA_ID",
  "ASIGNACION",
  "SECUENCIACION",
  "INSTRUCCION",
  "ENTRADA",
  "SALIDA",
  "CONDICIONAL",
  "REPETICION_D",
  "REPETICION_I",
  "RETURN",
  "LLAMADA_FUNCION",
  "EXPRESION",
  "ESCRIBIR",
  "COND",
  "LITERAL",
  "LISTA_PASE_PARAMETROS",
  "LITERAL_NUMBER",
  "LITERAL_BOOLEAN" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_1(val, _values, result)
     result = Estructura.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_2(val, _values, result)
     result = Estructura.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_3(val, _values, result)
     result = Funcion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[0], nil, nil, val[4], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[0], val[2], nil, val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_8(val, _values, result)
     result = Funcion.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_9(val, _values, result)
     result = Parametros.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_10(val, _values, result)
     result = Parametros.new(val[0],val[1],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_11(val, _values, result)
     result = Programa.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_12(val, _values, result)
     result = Bloque.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_13(val, _values, result)
     result = Bloque.new(nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_14(val, _values, result)
     result = ListaDeclaracion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_15(val, _values, result)
     result = ListaDeclaracion.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_16(val, _values, result)
     result = Declaracion.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_17(val, _values, result)
     result = Declaracion.new(val[0], nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_18(val, _values, result)
     result = Identificador.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_19(val, _values, result)
     result = Identificador.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_20(val, _values, result)
     result = Secuenciacion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_21(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_22(val, _values, result)
     result = Instruccion.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_30(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_32(val, _values, result)
     result = Return.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_33(val, _values, result)
     result = Asignacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_34(val, _values, result)
     result = Entrada.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_35(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_36(val, _values, result)
     result = Salida.new(val[1], "SALTO") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_37(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_38(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_39(val, _values, result)
     result = Escribir.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_40(val, _values, result)
     result = Escribir.new()
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_41(val, _values, result)
     result = Condicional.new(val[1],val[3],val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_42(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_43(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_44(val, _values, result)
     result = For.new(val[1], val[3], val[5], val[7], val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_45(val, _values, result)
     result = For.new(val[1], val[3], val[5], nil, val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_46(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_47(val, _values, result)
     result = RepeticionI.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_50(val, _values, result)
     result = Identificador.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_51(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_52(val, _values, result)
     result = OpNot.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_53(val, _values, result)
     result = OpUMINUS.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 177)
  def _reduce_54(val, _values, result)
     result = OpMultiplicacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 178)
  def _reduce_55(val, _values, result)
     result = OpDivisionE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 179)
  def _reduce_56(val, _values, result)
     result = OpModE.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 180)
  def _reduce_57(val, _values, result)
     result = OpDivision.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_58(val, _values, result)
     result = OpMod.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 182)
  def _reduce_59(val, _values, result)
     result = OpSuma.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 183)
  def _reduce_60(val, _values, result)
     result = OpResta.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_61(val, _values, result)
     result = OpEquivalente.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_62(val, _values, result)
     result = OpDesigual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 186)
  def _reduce_63(val, _values, result)
     result = OpMayorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 187)
  def _reduce_64(val, _values, result)
     result = OpMenorIgual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 188)
  def _reduce_65(val, _values, result)
     result = OpMayor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 189)
  def _reduce_66(val, _values, result)
     result = OpMenor.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 190)
  def _reduce_67(val, _values, result)
     result = OpAnd.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 191)
  def _reduce_68(val, _values, result)
     result = OpOr.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 196)
  def _reduce_69(val, _values, result)
     result = LlamadaFuncion.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 197)
  def _reduce_70(val, _values, result)
     result = LlamadaFuncion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_71(val, _values, result)
     result = ListaPaseParametros.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 202)
  def _reduce_72(val, _values, result)
     result = ListaPaseParametros.new(nil,val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 207)
  def _reduce_73(val, _values, result)
     result = TipoNumber.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 208)
  def _reduce_74(val, _values, result)
     result = TipoBoolean.new() 
    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.y', 219)
  def _reduce_77(val, _values, result)
     result = LiteralNumerico.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 224)
  def _reduce_78(val, _values, result)
     result = LiteralBooleano.new("true") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 225)
  def _reduce_79(val, _values, result)
     result = LiteralBooleano.new("false") 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ParserRtn
